var searchIndex = JSON.parse('{\
"rust_gpu_sdf":{"doc":"","t":[6,6,5,0,0,0,0,3,8,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,0,0,11,0,11,11,11,11,11,12,10,11,11,11,11,11,0,0,0,11,11,0,11,11,11,11,11,11,11,11,0,0,0,0,0,11,12,11,0,11,11,11,0,11,0,6,6,11,11,11,6,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,6,3,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,6,3,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,16,8,3,11,11,11,11,11,12,11,11,11,12,11,11,10,0,0,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,0,0,0,0,0,0,3,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,6,6,6,6,6,6,6,6,6,6,11,3,11,11,12,11,11,11,11,12,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["D2","D3","default","operators","prelude","raymarch","signed_distance_field","Operator","SignedDistanceOperator","angle","axis","axis_pos","axis_rot","borrow","borrow_mut","clone","clone_into","composite","count","default","delta","dir","dir","displace","displace","dist","elongate","eq","evaluate","extent","fmt","from","hash","hollow","intersection","into","isosurface","k","k","k","k","op","op","operator","partial_cmp","period","period","radius","radius","reflect","repeat","rotate","rotation","rotation","scale","scale","scale","sdf","sdf","sdf","sdf","sdf","sdf","smooth_intersection","smooth_subtraction","smooth_union","stretch","subtraction","target","target","to_owned","translate","translation","try_from","try_into","twist","type_id","union","Onion","Transform","radius","rotation","scale","Displace","DisplaceOp","borrow","borrow_mut","clone","clone_into","cmp","default","displace","displace","displace","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Elongate","ElongateOp","borrow","borrow_mut","default","default","extent","extent","extent","fmt","from","into","operator","operator","try_from","try_into","type_id","Hollow","HollowOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","Intersection","IntersectionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Isosurface","IsosurfaceOp","borrow","borrow_mut","clone","clone_into","default","delta","delta","delta","eq","fmt","from","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Reflect","ReflectOp","axis","axis","axis","borrow","borrow_mut","clone","clone_into","default","default","eq","fmt","from","into","operator","operator","to_owned","try_from","try_into","type_id","RepeatCount","RepeatCountOp","RepeatInfinite","RepeatInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","count","count","default","default","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","operator","period","period","period","period","period","period","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Rotate2d","Rotate2dOp","Rotate3d","Rotate3dOp","angle","angle","angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","rotation","rotation","rotation","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Scale","ScaleOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","partial_cmp","scale","scale","scale","to_owned","try_from","try_into","type_id","SmoothIntersection","SmoothIntersectionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothSubtraction","SmoothSubtractionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothUnion","SmoothUnionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","StretchDist","StretchDistOp","StretchInfinite","StretchInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","default","dir","dir","dir","dir","dir","dir","dist","dist","dist","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","operator","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Subtraction","SubtractionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Translate","TranslateOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","translation","translation","translation","try_from","try_into","type_id","Twist","TwistOp","axis_pos","axis_pos","axis_pos","axis_rot","axis_rot","axis_rot","borrow","borrow_mut","clone","clone_into","default","default","eq","fmt","from","into","k","k","k","operator","operator","to_owned","try_from","try_into","type_id","Union","UnionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Output","Raymarch","RaymarchOutput","borrow","borrow_mut","clone","clone_into","default","dist","eq","fmt","from","hit","into","partial_cmp","raymarch","sphere_trace_lipschitz","sphere_trace_naive","steps","to_owned","try_from","try_into","type_id","SphereTraceLipschitz","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","raymarch","to_owned","try_from","try_into","type_id","SphereTraceNaive","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","raymarch","to_owned","try_from","try_into","type_id","SignedDistanceField","adapters","attributes","evaluate","metrics","shapes","extrude","extrude_interior","normals","sweep","Extrude","axis","axis","borrow","borrow_mut","clone","clone_into","default","depth","depth","eq","evaluate","fmt","from","into","sdf","sdf","to_owned","try_from","try_into","type_id","ExtrudeInterior","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","fmt","from","into","partial_cmp","to_owned","try_from","try_into","type_id","CentralDiffNormals","TetrahedronNormals","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","epsilon","epsilon","epsilon","epsilon","eq","eq","evaluate","evaluate","fmt","fmt","from","from","into","into","partial_cmp","partial_cmp","sdf","sdf","sdf","sdf","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Sweep","borrow","borrow_mut","clone","clone_into","cmp","core","core","default","eq","evaluate","fmt","from","hash","into","partial_cmp","shell","shell","to_owned","try_from","try_into","type_id","color","distance","normal","position","tangent","uv","Color","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Distance","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Normal","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Position","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Tangent","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Uv","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","chebyshev","euclidean","taxicab","ChebyshevMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","EuclideanMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","TaxicabMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","composite","ngon","octahedron","plane","Ball","Box","Capsule","Circle","Cube","Line","Point","Sphere","Square","Torus","radius","Ngon","borrow","borrow_mut","cos","default","evaluate","from","into","radius","sin","tan","try_from","try_into","type_id","Octahedron","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","fmt","from","into","partial_cmp","size","size","to_owned","try_from","try_into","type_id","Plane","borrow","borrow_mut","clone","clone_into","default","default","dir","dir","eq","evaluate","evaluate","fmt","from","into","to_owned","try_from","try_into","type_id"],"q":["rust_gpu_sdf","","","","","","","rust_gpu_sdf::operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::composite","","","","","rust_gpu_sdf::operators::displace","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::elongate","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::hollow","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::intersection","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::isosurface","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::reflect","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::repeat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::rotate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::scale","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_intersection","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_subtraction","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_union","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::stretch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::subtraction","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::translate","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::twist","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::union","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_lipschitz","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_naive","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field","","","","","","rust_gpu_sdf::signed_distance_field::adapters","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude_interior","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::normals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::sweep","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes","","","","","","rust_gpu_sdf::signed_distance_field::attributes::color","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::distance","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::normal","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::position","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::tangent","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::uv","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics","","","rust_gpu_sdf::signed_distance_field::metrics::chebyshev","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::euclidean","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::taxicab","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes","","","","rust_gpu_sdf::signed_distance_field::shapes::composite","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::ngon","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::octahedron","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::plane","","","","","","","","","","","","","","","","","",""],"d":["","","Free-standing <code>Default::default()</code> invocation","Types that modify a distance field.","","","Types that describe signed distance fields.","Applies a <code>SignedDistanceOperator</code> to a <code>SignedDistanceField</code>.","Modifies the input / output of a <code>SignedDistanceField</code>.","","","","","","","","","Operators composed from other operators.","","","","","","Displace the output of a distance field using the output …","","","Extrude a shape along its axes, preserving exterior …","","","","","Returns the argument unchanged.","","Convert a solid shape into a hollow one with an infinitely …","Compute the boolean intersection of two distance fields.","Calls <code>U::from(self)</code>.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","","","Reflect a distance field about an arbitrary axis.","Operators for repeating distance fields across a domain.","Rotate a distance field.","","","Uniformly scale a distance field.","","","","","","","","","Compute the blended boolean intersection of two distance …","Compute the blended boolean subtraction of two distance …","Compute the blended boolean union of two distance fields.","Stretch a shape along an arbitrary axis, preserving …","Compute the boolean subtraction of two distance fields.","","","","Apply a positional translation to a distance field.","","","","Twist a distance field around an arbitrary axis.","","Compute the boolean union of two distance fields.","Converts a solid shape into a hollow one with the given …","Translate, rotate, and scale the wrapped SDF.","","","","Displace the output of a distance field using the output …","Displace the output of a distance field using the output …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Extrude a shape along its axes, preserving exterior …","Extrude a shape along its axes, preserving exterior …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Convert a solid shape into a hollow one with an infinitely …","Convert a solid shape into a hollow one with an infinitely …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Compute the boolean intersection of two distance fields.","Compute the boolean intersection of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Add an arbitrary radius to a distance field.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Reflect a distance field about an arbitrary axis.","Reflect a distance field about an arbitrary axis.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Repeat a distance field a set number of times in one or …","Repeat a distance field a set number of times in one or …","Repeat a distance field infinitely in one or more axes.","Repeat a distance field infinitely in one or more axes.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Rotate a 3D distance field.","Rotate a distance field.","Rotate a distance field.","Rotate a distance field.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Uniformly scale a distance field.","Uniformly scale a distance field.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Compute the blended boolean intersection of two distance …","Compute the blended boolean intersection of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean subtraction of two distance …","Compute the blended boolean subtraction of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean union of two distance fields.","Compute the blended boolean union of two distance fields.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Extrude a shape by an arbitrary distance along an …","Extrude a shape by an arbitrary distance along an …","Extrude a shape infinitely along an arbitrary axis.","Extrude a shape infinitely along an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the boolean subtraction of two distance fields.","Compute the boolean subtraction of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Apply a positional translation to a distance field.","Apply a positional translation to a distance field.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Twist a distance field around an arbitrary axis.","Twist a distance field around an arbitrary axis.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Compute the boolean union of two distance fields.","Compute the boolean union of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Describes a shape in terms of distance to the nearest …","Distance fields that convert between other kinds of …","Attributes that can be computed by a distance field","","Distance metrics.","Distance field shapes.","Extrude a 2D distance field into 3D.","","","Create a 3D distance field by sweeping a 2D distance field …","Extrude a 2D distance field into 3D.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Extrude a 2D distance field into 3D, using its interior …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Create a 3D distance field by sweeping a 2D distance field …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Chebyshev distance metric.","Euclidean distance metric.","Taxicab distance metric.","Chebyshev distance metric.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Euclidian distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Taxicab distance metric.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Shapes composed from other shapes.","","An octahedron.","A plane.","A ball.","A box.","A capsule.","A 2D circle.","A 3D cube.","An infinitely thin line. Not very useful on its own; …","An infinitely small point. Not very useful on its own; …","A 3D sphere.","A 2D square.","A 3D torus.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","An octahedron.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","A plane.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,0,0,3,0,3,3,3,3,3,3,84,3,3,3,3,3,0,0,0,3,3,0,3,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,0,3,3,3,0,3,0,0,0,38,39,39,0,0,12,12,12,12,12,12,41,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,15,15,15,15,45,15,15,15,15,15,15,15,15,15,15,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,46,33,33,33,33,33,33,0,0,9,9,9,9,9,47,9,9,9,9,9,9,9,9,9,9,9,9,0,0,48,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,26,8,26,8,26,8,26,8,49,8,8,26,26,8,8,26,8,26,8,26,8,26,8,26,26,8,8,50,49,26,8,26,8,26,8,26,8,26,8,26,8,0,0,0,0,51,2,2,2,30,2,30,2,30,2,30,2,30,2,30,2,30,2,30,2,30,2,30,52,30,30,2,30,2,30,2,30,2,30,0,0,29,29,29,29,29,29,29,29,29,29,29,53,29,29,29,29,29,29,0,0,20,20,20,20,20,20,20,20,20,54,20,20,20,20,54,20,20,20,20,20,20,0,0,21,21,21,21,21,21,21,21,21,55,21,21,21,21,55,21,21,21,21,21,21,0,0,22,22,22,22,22,22,22,22,22,56,22,22,22,22,56,22,22,22,22,22,22,0,0,0,0,11,10,11,10,11,10,11,10,11,11,10,10,57,58,11,10,11,10,58,10,10,11,10,11,10,11,10,11,10,11,11,10,10,11,10,11,10,11,10,11,10,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,59,34,34,34,34,34,34,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,60,31,31,31,31,31,0,0,61,6,6,61,6,6,6,6,6,6,6,6,6,6,6,6,61,6,6,6,6,6,6,6,6,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,62,35,35,35,35,35,35,85,0,0,63,63,63,63,63,63,63,63,63,63,63,63,85,0,0,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,86,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,68,69,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,0,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83],"f":[0,0,[[],1],0,0,0,0,0,0,[[[3,[2]]],4],[[[3,[5]]]],[[[3,[6]]]],[[[3,[6]]]],[[]],[[]],[[[3,[7,7]]],[[3,[7,7]]]],[[]],0,[[[3,[8]]]],[[],[[3,[1,1]]]],[[[3,[9]]],4],[[[3,[10]]]],[[[3,[11]]]],0,[[[3,[12]]]],[[[3,[10]]],4],0,[[[3,[13,13]],3],14],[3],[[[3,[15]]]],[[[3,[16,16]],17],18],[[]],[[[3,[19,19]]]],0,0,[[]],0,[[[3,[6]]],4],[[[3,[20]]],4],[[[3,[21]]],4],[[[3,[22]]],4],[3],0,[[]],[[[3,[23,23]],3],[[25,[24]]]],[[[3,[8]]]],[[[3,[26]]]],[[[3,[[3,[27]],9]]],4],[[[3,[28,9]]],4],0,0,0,[[[3,[[3,[[3,[29]],30]],31]]],32],[[[3,[30]]],32],0,[[[3,[29]]],4],[[[3,[[3,[[3,[29]],30]],31]]],4],[[[3,[22]]]],[[[3,[21]]]],[[[3,[33]]]],[[[3,[34]]]],[[[3,[35]]]],[[[3,[20]]]],0,0,0,0,0,[3],0,[[]],0,[[[3,[31]]]],[[],36],[[],36],0,[[],37],0,0,0,[38,4],[39,32],[39,4],0,0,[[]],[[]],[[[12,[7]]],[[12,[7]]]],[[]],[[[12,[40]],12],24],[[],[[12,[1]]]],[41],[12],0,[[[12,[13]],12],14],[[[12,[16]],17],18],[[]],[[[12,[19]]]],[[]],[12,42],[[[12,[23]],12],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[],[[15,[43]]]],[[],[[15,[44]]]],[45],[15],0,[[[15,[16]],17],18],[[]],[[]],[[[15,[43]],43],42],[[[15,[44]],44],42],[[],36],[[],36],[[],37],0,0,[[]],[[]],[27,27],[[]],[[],27],[[27,27],14],[[27,17],18],[[]],[[]],[[27,43],42],[[27,44],42],[[27,27],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[33,[7]]],[[33,[7]]]],[[]],[[[33,[40]],33],24],[[],[[33,[1]]]],[[[33,[13]],33],14],[[[33,[16]],17],18],[[]],[[[33,[19]]]],[[]],[[33,44],42],[[33,43],42],[[[33,[23]],33],[[25,[24]]]],[46],[33],0,[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[9,9],[[]],[[],9],[47,4],[9,4],0,[[9,9],14],[[9,17],18],[[]],[[]],[9,42],[[9,9],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,0,[48],[5],0,[[]],[[]],[[[5,[7]]],[[5,[7]]]],[[]],[[],[[5,[44]]]],[[],[[5,[43]]]],[[[5,[13]],5],14],[[[5,[16]],17],18],[[]],[[]],[[[5,[44]],44],42],[[[5,[43]],43],42],[[]],[[],36],[[],36],[[],37],0,0,0,0,[[]],[[]],[[]],[[]],[[[26,[7]]],[[26,[7]]]],[[[8,[7]]],[[8,[7]]]],[[]],[[]],[49],[8],0,[[],[[26,[43]]]],[[],[[26,[44]]]],[[],[[8,[43]]]],[[],[[8,[44]]]],[[[26,[13]],26],14],[[[8,[13]],8],14],[[[26,[16]],17],18],[[[8,[16]],17],18],[[]],[[]],[[]],[[]],[[[26,[43]],43],42],[[[26,[44]],44],42],[[[8,[43]],43],42],[[[8,[44]],44],42],[50],[49],[26],[8],0,0,[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],0,0,0,0,[51,4],[2,4],0,[[]],[[]],[[]],[[]],[2,2],[30,30],[[]],[[]],[[],2],[[],30],[[2,2],14],[[30,30],14],[[2,17],18],[[30,17],18],[[]],[[]],[[]],[[]],[[2,44],42],[[30,43],42],[52,32],[30,32],0,[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],0,0,[[]],[[]],[29,29],[[]],[[],29],[[29,29],14],[[29,17],18],[[]],[[]],[29,42],[[29,29],[[25,[24]]]],[53,4],[29,4],0,[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[20,[7]]],[[20,[7]]]],[[]],[[],[[20,[1]]]],[[[20,[13]],20],14],[[[20,[16]],17],18],[[]],[[]],[54,4],[20,4],0,[20,42],[[[20,[23]],20],[[25,[24]]]],[54],[20],0,[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[21,[7]]],[[21,[7]]]],[[]],[[],[[21,[1]]]],[[[21,[13]],21],14],[[[21,[16]],17],18],[[]],[[]],[55,4],[21,4],0,[21,42],[[[21,[23]],21],[[25,[24]]]],[55],[21],0,[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[22,[7]]],[[22,[7]]]],[[]],[[],[[22,[1]]]],[[[22,[13]],22],14],[[[22,[16]],17],18],[[]],[[]],[56,4],[22,4],0,[22,42],[[[22,[23]],22],[[25,[24]]]],[56],[22],0,[[]],[[],36],[[],36],[[],37],0,0,0,0,[[]],[[]],[[]],[[]],[[[11,[7]]],[[11,[7]]]],[[[10,[7]]],[[10,[7]]]],[[]],[[]],[[],[[11,[43]]]],[[],[[11,[44]]]],[[],[[10,[44]]]],[[],[[10,[43]]]],[57],[58],[11],[10],0,0,[58,4],[10,4],0,[[[11,[13]],11],14],[[[10,[13]],10],14],[[[11,[16]],17],18],[[[10,[16]],17],18],[[]],[[]],[[]],[[]],[[[11,[43]],43],42],[[[11,[44]],44],42],[[[10,[44]],44],42],[[[10,[43]],43],42],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],0,0,[[]],[[]],[[[34,[7]]],[[34,[7]]]],[[]],[[[34,[40]],34],24],[[],[[34,[1]]]],[[[34,[13]],34],14],[[[34,[16]],17],18],[[]],[[[34,[19]]]],[[]],[34,42],[[[34,[23]],34],[[25,[24]]]],[59],[34],0,[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[31,[7]]],[[31,[7]]]],[[]],[[[31,[40]],31],24],[[],[[31,[1]]]],[[[31,[13]],31],14],[[[31,[16]],17],18],[[]],[[[31,[19]]]],[[]],[31,42],[[[31,[23]],31],[[25,[24]]]],[[]],[60],[31],0,[[],36],[[],36],[[],37],0,0,[61],[6],0,[61],[6],0,[[]],[[]],[[[6,[7]]],[[6,[7]]]],[[]],[[],[[6,[43]]]],[[],[[6,[44]]]],[[[6,[13]],6],14],[[[6,[16]],17],18],[[]],[[]],[61,4],[6,4],0,[[[6,[43]],43],42],[[[6,[44]],44],42],[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[[35,[7]]],[[35,[7]]]],[[]],[[[35,[40]],35],24],[[],[[35,[1]]]],[[[35,[13]],35],14],[[[35,[16]],17],18],[[]],[[[35,[19]]]],[[]],[35,42],[[[35,[23]],35],[[25,[24]]]],[62],[35],0,[[]],[[],36],[[],36],[[],37],0,0,0,[[]],[[]],[63,63],[[]],[[],63],0,[[63,63],14],[[63,17],18],[[]],0,[[]],[[63,63],[[25,[24]]]],[[4,4,43,43,4]],0,0,0,[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[64,64],[[]],[[],64],[[64,64],14],[[64,17],18],[[]],[[]],0,[[64,4,4,43,43,4]],[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[65,65],[[]],[[],65],[[65,65],14],[[65,17],18],[[]],[[]],[[65,4,4,43,43,4]],[[]],[[],36],[[],36],[[],37],0,0,0,[[]],0,0,0,0,0,0,0,[66,43],0,[[]],[[]],[66,66],[[]],[[],66],[66,4],0,[[66,66],14],[[66,43],42],[[66,17],18],[[]],[[]],[66],0,[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[[[67,[7]]],[[67,[7]]]],[[]],[[],67],[[[67,[13]],67],14],[[67,43],42],[[[67,[16]],17],18],[[]],[[]],[[[67,[23]],67],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,0,[[]],[[]],[[]],[[]],[[[68,[7]]],[[68,[7]]]],[[[69,[7]]],[[69,[7]]]],[[]],[[]],[[],[[68,[1]]]],[[],[[69,[1]]]],[68,4],[69,4],0,0,[[[68,[13]],68],14],[[[69,[13]],69],14],[[68,43],70],[[69,43],70],[[[68,[16]],17],18],[[[69,[16]],17],18],[[]],[[]],[[]],[[]],[[[68,[23]],68],[[25,[24]]]],[[[69,[23]],69],[[25,[24]]]],[68],[69],0,0,[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],0,[[]],[[]],[71,71],[[]],[[71,71],24],[71],0,[[],71],[[71,71],14],[[71,43],42],[[71,17],18],[[]],[71],[[]],[[71,71],[[25,[24]]]],[71],0,[[]],[[],36],[[],36],[[],37],0,0,0,0,0,0,0,[[]],[[]],[72,72],[[]],[[],72],[72],[72],[[72,72],14],[[72,17],18],[[72,17],18],[73,72],[[]],[[]],[[]],[[],74],[[],36],[[],36],[[],37],0,[[]],[[]],[42,42],[[]],[[],42],[42],[42],[[42,42],14],[[42,17],18],[[42,17],18],[[]],[4,42],[[]],[[42,42],[[25,[24]]]],[[]],[[],74],[[],36],[[],36],[[],37],0,[[]],[[]],[70,70],[[]],[[],70],[70],[70],[[70,70],14],[[70,17],18],[[70,17],18],[[]],[43,70],[[]],[[]],[[],74],[[],36],[[],36],[[],37],0,[[]],[[]],[75,75],[[]],[[],75],[75],[75],[[75,75],14],[[75,17],18],[[75,17],18],[43,75],[[]],[[]],[[]],[[],74],[[],36],[[],36],[[],37],0,[[]],[[]],[76,76],[[]],[[],76],[76],[76],[[76,76],14],[[76,17],18],[[76,17],18],[[]],[43,76],[[]],[[]],[[],74],[[],36],[[],36],[[],37],0,[[]],[[]],[77,77],[[]],[[],77],[77],[77],[[77,77],14],[[77,17],18],[[77,17],18],[[]],[44,77],[[]],[[]],[[],74],[[],36],[[],36],[[],37],0,0,0,0,[[]],[[]],[78,78],[[]],[[78,78],24],[[],78],[[78,78],14],[[78,43],42],[[78,44],42],[[78,17],18],[[]],[78],[[]],[[78,78],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[28,28],[[]],[[28,28],24],[[],28],[[28,28],14],[[28,44],42],[[28,43],42],[[28,43],70],[[28,17],18],[[]],[28],[[]],[[28,28],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[79,79],[[]],[[79,79],24],[[],79],[[79,79],14],[[79,44],42],[[79,43],42],[[79,17],18],[[]],[79],[[]],[[79,79],[[25,[24]]]],[[]],[[],36],[[],36],[[],37],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,4],0,[[]],[[]],0,[[],81],[[81,44],42],[[]],[[]],0,0,0,[[],36],[[],36],[[],37],0,[[]],[[]],[82,82],[[]],[[],82],[[82,82],14],[[82,43],42],[[82,17],18],[[]],[[]],[[82,82],[[25,[24]]]],[82,4],0,[[]],[[],36],[[],36],[[],37],0,[[]],[[]],[[[83,[7]]],[[83,[7]]]],[[]],[[],[[83,[44]]]],[[],[[83,[43]]]],[83],0,[[[83,[13]],83],14],[[[83,[43]],43],42],[[[83,[44]],44],42],[[[83,[16]],17],18],[[]],[[]],[[]],[[],36],[[],36],[[],37]],"p":[[8,"Default"],[3,"Rotate2dOp"],[3,"Operator"],[15,"f32"],[3,"ReflectOp"],[3,"TwistOp"],[8,"Clone"],[3,"RepeatCountOp"],[3,"IsosurfaceOp"],[3,"StretchDistOp"],[3,"StretchInfiniteOp"],[3,"DisplaceOp"],[8,"PartialEq"],[15,"bool"],[3,"ElongateOp"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[3,"SmoothIntersectionOp"],[3,"SmoothSubtractionOp"],[3,"SmoothUnionOp"],[8,"PartialOrd"],[4,"Ordering"],[4,"Option"],[3,"RepeatInfiniteOp"],[3,"HollowOp"],[3,"EuclideanMetric"],[3,"ScaleOp"],[3,"Rotate3dOp"],[3,"TranslateOp"],[3,"Quat"],[3,"IntersectionOp"],[3,"SubtractionOp"],[3,"UnionOp"],[4,"Result"],[3,"TypeId"],[6,"Onion"],[6,"Transform"],[8,"Ord"],[6,"Displace"],[3,"Distance"],[3,"Vec3"],[3,"Vec2"],[6,"Elongate"],[6,"Intersection"],[6,"Isosurface"],[6,"Reflect"],[6,"RepeatCount"],[6,"RepeatInfinite"],[6,"Rotate2d"],[6,"Rotate3d"],[6,"Scale"],[6,"SmoothIntersection"],[6,"SmoothSubtraction"],[6,"SmoothUnion"],[6,"StretchInfinite"],[6,"StretchDist"],[6,"Subtraction"],[6,"Translate"],[6,"Twist"],[6,"Union"],[3,"RaymarchOutput"],[3,"SphereTraceLipschitz"],[3,"SphereTraceNaive"],[3,"Extrude"],[3,"ExtrudeInterior"],[3,"TetrahedronNormals"],[3,"CentralDiffNormals"],[3,"Normal"],[3,"Sweep"],[3,"Color"],[3,"Vec4"],[3,"String"],[3,"Position"],[3,"Tangent"],[3,"Uv"],[3,"ChebyshevMetric"],[3,"TaxicabMetric"],[6,"Ball"],[3,"Ngon"],[3,"Octahedron"],[3,"Plane"],[8,"SignedDistanceOperator"],[8,"Raymarch"],[8,"SignedDistanceField"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
