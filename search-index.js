var searchIndex = JSON.parse('{\
"rust_gpu_sdf":{"doc":"","t":[6,6,6,5,0,0,0,0,3,8,11,0,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,0,0,11,0,11,11,11,11,11,12,10,11,11,11,11,11,0,0,0,11,11,0,11,11,11,11,11,11,11,11,0,0,0,0,0,0,11,12,11,0,11,11,11,0,11,0,17,17,17,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,6,3,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,6,3,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,16,8,3,11,11,11,11,11,12,11,11,11,12,11,11,10,0,0,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,0,0,0,0,0,0,3,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,6,6,6,6,6,6,6,6,6,6,11,3,11,11,12,11,11,11,11,12,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["D1","D2","D3","default","operators","prelude","raymarch","signed_distance_field","Operator","SignedDistanceOperator","angle","axial_reflect","axis","axis","axis_pos","axis_rot","borrow","borrow_mut","clone","clone_into","composite","conditional","conditional_op","count","default","delta","dir","dir","displace","displace","dist","elongate","eq","evaluate","extent","fmt","from","hash","hollow","intersection","into","isosurface","k","k","k","k","op","op","operator","partial_cmp","period","period","radius","radius","reflect","repeat","rotate","rotation","rotation","scale","scale","scale","sdf","sdf","sdf","sdf","sdf","sdf","sided","smooth_intersection","smooth_subtraction","smooth_union","stretch","subtraction","target","target","to_owned","translate","translation","try_from","try_into","twist","type_id","union","AXIS_X","AXIS_Y","AXIS_Z","AxialReflect","AxialReflectOp","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","operator","operator","operator","to_owned","try_from","try_into","type_id","Onion","Transform","radius","rotation","scale","Conditional","ConditionalOp","borrow","borrow_mut","clone","clone_into","cmp","conditional_op","default","eq","fmt","from","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Displace","DisplaceOp","borrow","borrow_mut","clone","clone_into","cmp","default","displace","displace","displace","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Elongate","ElongateOp","borrow","borrow_mut","default","default","default","extent","extent","extent","fmt","from","into","operator","operator","operator","try_from","try_into","type_id","Hollow","HollowOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","Intersection","IntersectionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Isosurface","IsosurfaceOp","borrow","borrow_mut","clone","clone_into","default","delta","delta","delta","eq","fmt","from","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Reflect","ReflectOp","axis","axis","axis","borrow","borrow_mut","clone","clone_into","default","default","default","eq","fmt","from","into","operator","operator","operator","to_owned","try_from","try_into","type_id","RepeatCount","RepeatCountOp","RepeatInfinite","RepeatInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","count","count","default","default","default","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","period","period","period","period","period","period","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Rotate2d","Rotate2dOp","Rotate3d","Rotate3dOp","angle","angle","angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","rotation","rotation","rotation","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Scale","ScaleOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","partial_cmp","scale","scale","scale","to_owned","try_from","try_into","type_id","Sided","SidedOp","axis","axis","axis","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","SmoothIntersection","SmoothIntersectionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothSubtraction","SmoothSubtractionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothUnion","SmoothUnionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","StretchDist","StretchDistOp","StretchInfinite","StretchInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","default","dir","dir","dir","dir","dir","dir","dist","dist","dist","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","operator","operator","operator","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Subtraction","SubtractionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Translate","TranslateOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","translation","translation","translation","try_from","try_into","type_id","Twist","TwistOp","axis_pos","axis_pos","axis_pos","axis_rot","axis_rot","axis_rot","borrow","borrow_mut","clone","clone_into","default","default","eq","fmt","from","into","k","k","k","operator","operator","to_owned","try_from","try_into","type_id","Union","UnionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Output","Raymarch","RaymarchOutput","borrow","borrow_mut","clone","clone_into","default","dist","eq","fmt","from","hit","into","partial_cmp","raymarch","sphere_trace_lipschitz","sphere_trace_naive","steps","to_owned","try_from","try_into","type_id","SphereTraceLipschitz","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","raymarch","to_owned","try_from","try_into","type_id","SphereTraceNaive","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","raymarch","to_owned","try_from","try_into","type_id","SignedDistanceField","adapters","attributes","evaluate","metrics","shapes","extrude","extrude_interior","normals","sweep","Extrude","axis","axis","borrow","borrow_mut","clone","clone_into","default","depth","depth","eq","evaluate","evaluate","fmt","from","into","sdf","sdf","to_owned","try_from","try_into","type_id","ExtrudeInterior","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","evaluate","fmt","from","into","partial_cmp","to_owned","try_from","try_into","type_id","CentralDiffNormals","TetrahedronNormals","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","epsilon","epsilon","epsilon","epsilon","eq","eq","evaluate","evaluate","evaluate","evaluate","evaluate","fmt","fmt","from","from","into","into","partial_cmp","partial_cmp","sdf","sdf","sdf","sdf","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Sweep","borrow","borrow_mut","clone","clone_into","cmp","core","core","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","shell","shell","to_owned","try_from","try_into","type_id","color","distance","normal","position","tangent","uv","Color","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Distance","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Normal","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","from","into","to_owned","to_string","try_from","try_into","type_id","Position","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Tangent","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","from","into","to_owned","to_string","try_from","try_into","type_id","Uv","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","chebyshev","euclidean","taxicab","ChebyshevMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","EuclideanMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","TaxicabMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","composite","ngon","octahedron","plane","Ball","Box","Capsule","Circle","Cube","Line","Point","Sphere","Square","Torus","radius","Ngon","borrow","borrow_mut","cos","default","evaluate","from","into","radius","sin","tan","try_from","try_into","type_id","Octahedron","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","fmt","from","into","partial_cmp","size","size","to_owned","try_from","try_into","type_id","Plane","borrow","borrow_mut","clone","clone_into","default","default","default","dir","dir","eq","evaluate","evaluate","evaluate","fmt","from","into","to_owned","try_from","try_into","type_id"],"q":["rust_gpu_sdf","","","","","","","","rust_gpu_sdf::operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::axial_reflect","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::composite","","","","","rust_gpu_sdf::operators::conditional","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::displace","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::elongate","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::hollow","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::intersection","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::isosurface","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::reflect","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::repeat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::rotate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::scale","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::sided","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_intersection","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_subtraction","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_union","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::stretch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::subtraction","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::translate","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::twist","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::union","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_lipschitz","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_naive","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field","","","","","","rust_gpu_sdf::signed_distance_field::adapters","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude_interior","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::normals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::sweep","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes","","","","","","rust_gpu_sdf::signed_distance_field::attributes::color","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::distance","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::normal","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::position","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::tangent","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::uv","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics","","","rust_gpu_sdf::signed_distance_field::metrics::chebyshev","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::euclidean","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::taxicab","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes","","","","rust_gpu_sdf::signed_distance_field::shapes::composite","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::ngon","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::octahedron","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::plane","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Free-standing <code>Default::default()</code> invocation","Types that modify a distance field.","","","Types that describe signed distance fields.","Applies a <code>SignedDistanceOperator</code> to a <code>SignedDistanceField</code>.","Modifies the input / output of a <code>SignedDistanceField</code>.","","Reflect a distance field about an arbitrary axis.","","","","","","","","","Operators composed from other operators.","","","","","","","","Displace the output of a distance field using the output …","","","Extrude a shape along its axes, preserving exterior …","","","","","Returns the argument unchanged.","","Convert a solid shape into a hollow one with an infinitely …","Compute the boolean intersection of two distance fields.","Calls <code>U::from(self)</code>.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","","","Reflect a distance field about an arbitrary axis.","Operators for repeating distance fields across a domain.","Rotate a distance field.","","","Uniformly scale a distance field.","","","","","","","","","Given an infinitely-thin surface, divide space into …","Compute the blended boolean intersection of two distance …","Compute the blended boolean subtraction of two distance …","Compute the blended boolean union of two distance fields.","Stretch a shape along an arbitrary axis, preserving …","Compute the boolean subtraction of two distance fields.","","","","Apply a positional translation to a distance field.","","","","Twist a distance field around an arbitrary axis.","","Compute the boolean union of two distance fields.","","","","Reflect a distance field about X / Y / Z","Cheaply reflect a distance field about X / Y / Z using a …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Converts a solid shape into a hollow one with the given …","Translate, rotate, and scale the wrapped SDF.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Displace the output of a distance field using the output …","Displace the output of a distance field using the output …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Extrude a shape along its axes, preserving exterior …","Extrude a shape along its axes, preserving exterior …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Convert a solid shape into a hollow one with an infinitely …","Convert a solid shape into a hollow one with an infinitely …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Compute the boolean intersection of two distance fields.","Compute the boolean intersection of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Add an arbitrary radius to a distance field.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Reflect a distance field about an arbitrary axis.","Reflect a distance field about an arbitrary axis.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Repeat a distance field a set number of times in one or …","Repeat a distance field a set number of times in one or …","Repeat a distance field infinitely in one or more axes.","Repeat a distance field infinitely in one or more axes.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Rotate a 3D distance field.","Rotate a distance field.","Rotate a distance field.","Rotate a distance field.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Uniformly scale a distance field.","Uniformly scale a distance field.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Given an infinitely-thin surface, divide space into …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Compute the blended boolean intersection of two distance …","Compute the blended boolean intersection of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean subtraction of two distance …","Compute the blended boolean subtraction of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean union of two distance fields.","Compute the blended boolean union of two distance fields.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Extrude a shape by an arbitrary distance along an …","Extrude a shape by an arbitrary distance along an …","Extrude a shape infinitely along an arbitrary axis.","Extrude a shape infinitely along an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Compute the boolean subtraction of two distance fields.","Compute the boolean subtraction of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Apply a positional translation to a distance field.","Apply a positional translation to a distance field.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Twist a distance field around an arbitrary axis.","Twist a distance field around an arbitrary axis.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Compute the boolean union of two distance fields.","Compute the boolean union of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Describes a shape in terms of distance to the nearest …","Distance fields that convert between other kinds of …","Attributes that can be computed by a distance field","","Distance metrics.","Distance field shapes.","Extrude a 2D distance field into 3D.","","","Create a 3D distance field by sweeping a 2D distance field …","Extrude a 2D distance field into 3D.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Extrude a 2D distance field into 3D, using its interior …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Create a 3D distance field by sweeping a 2D distance field …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Chebyshev distance metric.","Euclidean distance metric.","Taxicab distance metric.","Chebyshev distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Euclidian distance metric.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Taxicab distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Shapes composed from other shapes.","","An octahedron.","A plane.","A ball.","A box.","A capsule.","A 2D circle.","A 3D cube.","An infinitely thin line. Not very useful on its own; …","An infinitely small point. Not very useful on its own; …","A 3D sphere.","A 2D square.","A 3D torus.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","An octahedron.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","A plane.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,0,0,3,0,3,3,3,3,3,3,90,3,3,3,3,3,0,0,0,3,3,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,0,3,3,3,0,3,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,44,45,45,0,0,9,9,9,9,9,47,9,9,9,9,9,9,9,9,9,9,9,0,0,14,14,14,14,14,14,48,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,17,17,17,17,17,49,17,17,17,17,17,17,17,17,17,17,17,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,50,35,35,35,35,35,35,0,0,11,11,11,11,11,51,11,11,11,11,11,11,11,11,11,11,11,11,0,0,52,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,28,10,28,10,28,10,28,10,53,10,10,28,28,28,10,10,28,10,28,10,28,10,28,10,28,10,10,54,53,28,10,28,10,28,10,28,10,28,10,28,10,0,0,0,0,55,2,2,2,32,2,32,2,32,2,32,2,32,2,32,2,32,2,32,2,32,2,32,56,32,32,2,32,2,32,2,32,2,32,0,0,31,31,31,31,31,31,31,31,31,31,31,57,31,31,31,31,31,31,0,0,58,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,24,24,24,24,24,24,24,24,24,59,24,24,24,24,59,24,24,24,24,24,24,0,0,23,23,23,23,23,23,23,23,23,60,23,23,23,23,60,23,23,23,23,23,23,0,0,22,22,22,22,22,22,22,22,22,61,22,22,22,22,61,22,22,22,22,22,22,0,0,0,0,13,12,13,12,13,12,13,12,13,13,12,12,62,63,13,12,13,12,63,12,12,13,12,13,12,13,12,13,12,13,13,13,12,12,12,13,12,13,12,13,12,13,12,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,64,37,37,37,37,37,37,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,65,33,33,33,33,33,0,0,66,7,7,66,7,7,7,7,7,7,7,7,7,7,7,7,66,7,7,7,7,7,7,7,7,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,67,36,36,36,36,36,36,91,0,0,68,68,68,68,68,68,68,68,68,68,68,68,91,0,0,68,68,68,68,68,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,92,0,0,0,0,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,73,74,74,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89],"f":[0,0,0,[[],1],0,0,0,0,0,0,[[[3,[2]]],4],0,[[[3,[5]]]],[[[3,[6]]]],[[[3,[7]]]],[[[3,[7]]]],[[]],[[]],[[[3,[8,8]]],[[3,[8,8]]]],[[]],0,0,[[[3,[9]]]],[[[3,[10]]]],[[],[[3,[1,1]]]],[[[3,[11]]],4],[[[3,[12]]]],[[[3,[13]]]],0,[[[3,[14]]]],[[[3,[12]]],4],0,[[[3,[15,15]],3],16],[3],[[[3,[17]]]],[[[3,[18,18]],19],20],[[]],[[[3,[21,21]]]],0,0,[[]],0,[[[3,[7]]],4],[[[3,[22]]],4],[[[3,[23]]],4],[[[3,[24]]],4],[3],0,[[]],[[[3,[25,25]],3],[[27,[26]]]],[[[3,[28]]]],[[[3,[10]]]],[[[3,[29,11]]],4],[[[3,[[3,[30]],11]]],4],0,0,0,[[[3,[[3,[[3,[31]],32]],33]]],34],[[[3,[32]]],34],0,[[[3,[31]]],4],[[[3,[[3,[[3,[31]],32]],33]]],4],[[[3,[24]]]],[[[3,[23]]]],[[[3,[22]]]],[[[3,[35]]]],[[[3,[36]]]],[[[3,[37]]]],0,0,0,0,0,0,[3],0,[[]],0,[[[3,[33]]]],[[],38],[[],38],0,[[],39],0,0,0,0,0,0,[[]],[[]],[40,40],[[]],[[40,40],16],[[40,19],20],[[]],[[]],[[40,4],41],[[40,42],41],[[40,43],41],[[]],[[],38],[[],38],[[],39],0,0,[44,4],[45,34],[45,4],0,0,[[]],[[]],[[[9,[8]]],[[9,[8]]]],[[]],[[[9,[46]],9],26],[47],[[],[[9,[1]]]],[[[9,[15]],9],16],[[[9,[18]],19],20],[[]],[[]],[9,41],[[[9,[25]],9],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[14,[8]]],[[14,[8]]]],[[]],[[[14,[46]],14],26],[[],[[14,[1]]]],[48],[14],0,[[[14,[15]],14],16],[[[14,[18]],19],20],[[]],[[[14,[21]]]],[[]],[14,41],[[[14,[25]],14],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[],[[17,[4]]]],[[],[[17,[42]]]],[[],[[17,[43]]]],[49],[17],0,[[[17,[18]],19],20],[[]],[[]],[[[17,[42]],42],41],[[[17,[4]],4],41],[[[17,[43]],43],41],[[],38],[[],38],[[],39],0,0,[[]],[[]],[30,30],[[]],[[],30],[[30,30],16],[[30,19],20],[[]],[[]],[[30,43],41],[[30,42],41],[[30,4],41],[[30,30],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[35,[8]]],[[35,[8]]]],[[]],[[[35,[46]],35],26],[[],[[35,[1]]]],[[[35,[15]],35],16],[[[35,[18]],19],20],[[]],[[[35,[21]]]],[[]],[35,41],[[[35,[25]],35],[[27,[26]]]],[50],[35],0,[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[11,11],[[]],[[],11],[51,4],[11,4],0,[[11,11],16],[[11,19],20],[[]],[[]],[11,41],[[11,11],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[52],[6],0,[[]],[[]],[[[6,[8]]],[[6,[8]]]],[[]],[[],[[6,[43]]]],[[],[[6,[4]]]],[[],[[6,[42]]]],[[[6,[15]],6],16],[[[6,[18]],19],20],[[]],[[]],[[[6,[43]],43],41],[[[6,[4]],4],41],[[[6,[42]],42],41],[[]],[[],38],[[],38],[[],39],0,0,0,0,[[]],[[]],[[]],[[]],[[[28,[8]]],[[28,[8]]]],[[[10,[8]]],[[10,[8]]]],[[]],[[]],[53],[10],0,[[],[[28,[43]]]],[[],[[28,[4]]]],[[],[[28,[42]]]],[[],[[10,[43]]]],[[],[[10,[42]]]],[[[28,[15]],28],16],[[[10,[15]],10],16],[[[28,[18]],19],20],[[[10,[18]],19],20],[[]],[[]],[[]],[[]],[28,41],[[[10,[43]],43],41],[[[10,[42]],42],41],[54],[53],[28],[10],0,0,[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],0,0,0,0,[55,4],[2,4],0,[[]],[[]],[[]],[[]],[2,2],[32,32],[[]],[[]],[[],2],[[],32],[[2,2],16],[[32,32],16],[[2,19],20],[[32,19],20],[[]],[[]],[[]],[[]],[[2,42],41],[[32,43],41],[56,34],[32,34],0,[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],0,0,[[]],[[]],[31,31],[[]],[[],31],[[31,31],16],[[31,19],20],[[]],[[]],[31,41],[[31,31],[[27,[26]]]],[57,4],[31,4],0,[[]],[[],38],[[],38],[[],39],0,0,[58],[5],0,[[]],[[]],[[[5,[8]]],[[5,[8]]]],[[]],[[[5,[46]],5],26],[[],[[5,[1]]]],[[[5,[15]],5],16],[[[5,[18]],19],20],[[]],[[[5,[21]]]],[[]],[[[5,[4]],4],41],[[[5,[42]],42],41],[[[5,[43]],43],41],[[[5,[25]],5],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[24,[8]]],[[24,[8]]]],[[]],[[],[[24,[1]]]],[[[24,[15]],24],16],[[[24,[18]],19],20],[[]],[[]],[59,4],[24,4],0,[24,41],[[[24,[25]],24],[[27,[26]]]],[59],[24],0,[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[23,[8]]],[[23,[8]]]],[[]],[[],[[23,[1]]]],[[[23,[15]],23],16],[[[23,[18]],19],20],[[]],[[]],[60,4],[23,4],0,[23,41],[[[23,[25]],23],[[27,[26]]]],[60],[23],0,[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[22,[8]]],[[22,[8]]]],[[]],[[],[[22,[1]]]],[[[22,[15]],22],16],[[[22,[18]],19],20],[[]],[[]],[61,4],[22,4],0,[22,41],[[[22,[25]],22],[[27,[26]]]],[61],[22],0,[[]],[[],38],[[],38],[[],39],0,0,0,0,[[]],[[]],[[]],[[]],[[[13,[8]]],[[13,[8]]]],[[[12,[8]]],[[12,[8]]]],[[]],[[]],[[],[[13,[43]]]],[[],[[13,[42]]]],[[],[[12,[42]]]],[[],[[12,[43]]]],[62],[63],[13],[12],0,0,[63,4],[12,4],0,[[[13,[15]],13],16],[[[12,[15]],12],16],[[[13,[18]],19],20],[[[12,[18]],19],20],[[]],[[]],[[]],[[]],[[[13,[43]],43],41],[[[13,[42]],42],41],[[[13,[4]],4],41],[[[12,[42]],42],41],[[[12,[4]],4],41],[[[12,[43]],43],41],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],0,0,[[]],[[]],[[[37,[8]]],[[37,[8]]]],[[]],[[[37,[46]],37],26],[[],[[37,[1]]]],[[[37,[15]],37],16],[[[37,[18]],19],20],[[]],[[[37,[21]]]],[[]],[37,41],[[[37,[25]],37],[[27,[26]]]],[64],[37],0,[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[33,[8]]],[[33,[8]]]],[[]],[[[33,[46]],33],26],[[],[[33,[1]]]],[[[33,[15]],33],16],[[[33,[18]],19],20],[[]],[[[33,[21]]]],[[]],[33,41],[[[33,[25]],33],[[27,[26]]]],[[]],[65],[33],0,[[],38],[[],38],[[],39],0,0,[66],[7],0,[66],[7],0,[[]],[[]],[[[7,[8]]],[[7,[8]]]],[[]],[[],[[7,[43]]]],[[],[[7,[42]]]],[[[7,[15]],7],16],[[[7,[18]],19],20],[[]],[[]],[66,4],[7,4],0,[[[7,[43]],43],41],[[[7,[42]],42],41],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[[36,[8]]],[[36,[8]]]],[[]],[[[36,[46]],36],26],[[],[[36,[1]]]],[[[36,[15]],36],16],[[[36,[18]],19],20],[[]],[[[36,[21]]]],[[]],[36,41],[[[36,[25]],36],[[27,[26]]]],[67],[36],0,[[]],[[],38],[[],38],[[],39],0,0,0,[[]],[[]],[68,68],[[]],[[],68],0,[[68,68],16],[[68,19],20],[[]],0,[[]],[[68,68],[[27,[26]]]],[[4,4,43,43,4]],0,0,0,[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[69,69],[[]],[[],69],[[69,69],16],[[69,19],20],[[]],[[]],0,[[69,4,4,43,43,4]],[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[70,70],[[]],[[],70],[[70,70],16],[[70,19],20],[[]],[[]],[[70,4,4,43,43,4]],[[]],[[],38],[[],38],[[],39],0,0,0,[[]],0,0,0,0,0,0,0,[71,43],0,[[]],[[]],[[[71,[8]]],[[71,[8]]]],[[]],[[],[[71,[1]]]],[71,4],0,[[[71,[15]],71],16],[[71,43],41],[[71,42],41],[[[71,[18]],19],20],[[]],[[]],[71],0,[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[[[72,[8]]],[[72,[8]]]],[[]],[[],72],[[[72,[15]],72],16],[[72,43],41],[[72,42],41],[[[72,[18]],19],20],[[]],[[]],[[[72,[25]],72],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,[[]],[[]],[[]],[[]],[[[73,[8]]],[[73,[8]]]],[[[74,[8]]],[[74,[8]]]],[[]],[[]],[[],[[73,[1]]]],[[],[[74,[1]]]],[73,4],[74,4],0,0,[[[73,[15]],73],16],[[[74,[15]],74],16],[[73,43],[[75,[43]]]],[[73,42],[[75,[42]]]],[[74,4],[[75,[4]]]],[[74,42],[[75,[42]]]],[[74,43],[[75,[43]]]],[[[73,[18]],19],20],[[[74,[18]],19],20],[[]],[[]],[[]],[[]],[[[73,[25]],73],[[27,[26]]]],[[[74,[25]],74],[[27,[26]]]],[73],[74],0,0,[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],0,[[]],[[]],[[[76,[8,8]]],[[76,[8,8]]]],[[]],[[[76,[46,46]],76],26],[76],0,[[],[[76,[1,1]]]],[[[76,[15,15]],76],16],[[76,42],41],[[76,43],41],[[[76,[18,18]],19],20],[[]],[[[76,[21,21]]]],[[]],[[[76,[25,25]],76],[[27,[26]]]],[76],0,[[]],[[],38],[[],38],[[],39],0,0,0,0,0,0,0,[[]],[[]],[77,77],[[]],[[],77],[77],[77],[[77,77],16],[[77,19],20],[[77,19],20],[[]],[78,77],[[]],[[]],[[],79],[[],38],[[],38],[[],39],0,[[]],[[]],[41,41],[[]],[[],41],[41],[41],[[41,41],16],[[41,19],20],[[41,19],20],[4,41],[[]],[[]],[[41,41],[[27,[26]]]],[[]],[[],79],[[],38],[[],38],[[],39],0,[[]],[[]],[[[75,[8]]],[[75,[8]]]],[[]],[[],[[75,[1]]]],[75],[75],[[[75,[15]],75],16],[[75,19],20],[[[75,[18]],19],20],[[],75],[[]],[80],[[]],[[]],[[],79],[[],38],[[],38],[[],39],0,[[]],[[]],[81,81],[[]],[[],81],[81],[81],[[81,81],16],[[81,19],20],[[81,19],20],[[]],[43,81],[[]],[[]],[[],79],[[],38],[[],38],[[],39],0,[[]],[[]],[[[82,[8]]],[[82,[8]]]],[[]],[[],[[82,[1]]]],[82],[82],[[[82,[15]],82],16],[[[82,[18]],19],20],[[82,19],20],[[],82],[80],[[]],[[]],[[]],[[],79],[[],38],[[],38],[[],39],0,[[]],[[]],[83,83],[[]],[[],83],[83],[83],[[83,83],16],[[83,19],20],[[83,19],20],[42,83],[[]],[[]],[[]],[[],79],[[],38],[[],38],[[],39],0,0,0,0,[[]],[[]],[84,84],[[]],[[84,84],26],[[],84],[[84,84],16],[[84,43],41],[[84,42],41],[[84,4],41],[[84,19],20],[[]],[84],[[]],[[84,84],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[29,29],[[]],[[29,29],26],[[],29],[[29,29],16],[[29,43],41],[[29,43],[[75,[43]]]],[[29,42],[[75,[42]]]],[[29,4],[[75,[4]]]],[[29,42],41],[[29,4],41],[[29,19],20],[[]],[29],[[]],[[29,29],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[85,85],[[]],[[85,85],26],[[],85],[[85,85],16],[[85,42],41],[[85,43],41],[[85,4],41],[[85,19],20],[[]],[85],[[]],[[85,85],[[27,[26]]]],[[]],[[],38],[[],38],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,4],0,[[]],[[]],0,[[],87],[[87,42],41],[[]],[[]],0,0,0,[[],38],[[],38],[[],39],0,[[]],[[]],[88,88],[[]],[[],88],[[88,88],16],[[88,43],41],[[88,19],20],[[]],[[]],[[88,88],[[27,[26]]]],[88,4],0,[[]],[[],38],[[],38],[[],39],0,[[]],[[]],[[[89,[8]]],[[89,[8]]]],[[]],[[],[[89,[42]]]],[[],[[89,[43]]]],[[],[[89,[4]]]],[89],0,[[[89,[15]],89],16],[[[89,[43]],43],41],[[[89,[42]],42],41],[[[89,[4]],4],41],[[[89,[18]],19],20],[[]],[[]],[[]],[[],38],[[],38],[[],39]],"p":[[8,"Default"],[3,"Rotate2dOp"],[3,"Operator"],[15,"f32"],[3,"SidedOp"],[3,"ReflectOp"],[3,"TwistOp"],[8,"Clone"],[3,"ConditionalOp"],[3,"RepeatCountOp"],[3,"IsosurfaceOp"],[3,"StretchDistOp"],[3,"StretchInfiniteOp"],[3,"DisplaceOp"],[8,"PartialEq"],[15,"bool"],[3,"ElongateOp"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[3,"SmoothUnionOp"],[3,"SmoothSubtractionOp"],[3,"SmoothIntersectionOp"],[8,"PartialOrd"],[4,"Ordering"],[4,"Option"],[3,"RepeatInfiniteOp"],[3,"EuclideanMetric"],[3,"HollowOp"],[3,"ScaleOp"],[3,"Rotate3dOp"],[3,"TranslateOp"],[3,"Quat"],[3,"IntersectionOp"],[3,"UnionOp"],[3,"SubtractionOp"],[4,"Result"],[3,"TypeId"],[3,"AxialReflectOp"],[3,"Distance"],[3,"Vec2"],[3,"Vec3"],[6,"Onion"],[6,"Transform"],[8,"Ord"],[6,"Conditional"],[6,"Displace"],[6,"Elongate"],[6,"Intersection"],[6,"Isosurface"],[6,"Reflect"],[6,"RepeatCount"],[6,"RepeatInfinite"],[6,"Rotate2d"],[6,"Rotate3d"],[6,"Scale"],[6,"Sided"],[6,"SmoothIntersection"],[6,"SmoothSubtraction"],[6,"SmoothUnion"],[6,"StretchInfinite"],[6,"StretchDist"],[6,"Subtraction"],[6,"Translate"],[6,"Twist"],[6,"Union"],[3,"RaymarchOutput"],[3,"SphereTraceLipschitz"],[3,"SphereTraceNaive"],[3,"Extrude"],[3,"ExtrudeInterior"],[3,"TetrahedronNormals"],[3,"CentralDiffNormals"],[3,"Normal"],[3,"Sweep"],[3,"Color"],[3,"Vec4"],[3,"String"],[15,"never"],[3,"Position"],[3,"Tangent"],[3,"Uv"],[3,"ChebyshevMetric"],[3,"TaxicabMetric"],[6,"Ball"],[3,"Ngon"],[3,"Octahedron"],[3,"Plane"],[8,"SignedDistanceOperator"],[8,"Raymarch"],[8,"SignedDistanceField"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
