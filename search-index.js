var searchIndex = JSON.parse('{\
"rust_gpu_sdf":{"doc":"","t":[6,6,6,0,5,0,0,0,0,3,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,3,8,11,0,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,11,0,0,11,0,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,0,0,0,0,11,11,11,11,11,11,11,12,11,0,11,11,11,11,0,11,0,17,17,17,17,17,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,6,6,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,6,3,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,6,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,6,3,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,16,8,3,11,11,11,11,11,12,11,11,11,12,11,11,10,0,0,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,0,0,0,0,0,0,3,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["D1","D2","D3","bound_checker","default","operators","prelude","raymarch","signed_distance_field","BoundChecker","_phantom","borrow","borrow_mut","clone","clone_into","default","epsilon","eq","fmt","from","into","is_bound","is_bound","is_field","is_field","samples","sdf","step","to_owned","try_from","try_into","type_id","Operator","SignedDistanceOperator","angle","axial_reflect","axis","axis","axis_pos","axis_rot","borrow","borrow_mut","clone","clone_into","compose","composite","conditional","conditional_op","cos","count","decagon","default","delta","dir","dir","displace","displace","dist","elongate","epsilon","eq","evaluate","extent","fmt","from","hash","hexagon","hollow","intersection","into","isosurface","k","k","k","k","new","new","nonagon","octagon","op","op","operator","partial_cmp","pentagon","period","period","quadrilateral","radius","radius","radius","radius","radius","radius","radius","radius","reflect","repeat","rotate","rotation","rotation","scale","scale","scale","sdf","sdf","sdf","sdf","sdf","sdf","sdf","sdf","sdf_a","sdf_b","septagon","sided","sin","smooth_intersection","smooth_subtraction","smooth_union","stretch","subtraction","tan","tan","tan","tan","tan","tan","target","target","to_owned","translate","translation","triangle","try_from","try_into","twist","type_id","union","AXIS_X","AXIS_XY","AXIS_XYZ","AXIS_Y","AXIS_Z","AxialReflect","AxialReflectOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","operator","operator","to_owned","try_from","try_into","type_id","Compose","ComposeOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","operator","partial_cmp","sdf_a","sdf_a","sdf_a","sdf_b","sdf_b","sdf_b","to_owned","try_from","try_into","type_id","Onion","Transform","radius","rotation","scale","Conditional","ConditionalOp","borrow","borrow_mut","clone","clone_into","cmp","conditional_op","default","eq","fmt","from","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Displace","DisplaceOp","borrow","borrow_mut","clone","clone_into","cmp","default","displace","displace","displace","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Elongate","ElongateOp","borrow","borrow_mut","clone","clone_into","cmp","default","default","default","eq","extent","extent","extent","fmt","from","hash","into","operator","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","Hollow","HollowOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","Intersection","IntersectionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Isosurface","IsosurfaceOp","borrow","borrow_mut","clone","clone_into","default","delta","delta","delta","eq","fmt","from","into","operator","partial_cmp","to_owned","try_from","try_into","type_id","Reflect","ReflectOp","axis","axis","axis","borrow","borrow_mut","clone","clone_into","default","default","default","eq","fmt","from","into","operator","operator","operator","to_owned","try_from","try_into","type_id","RepeatCount","RepeatCountOp","RepeatInfinite","RepeatInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","count","count","default","default","default","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","period","period","period","period","period","period","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Rotate2d","Rotate2dOp","Rotate3d","Rotate3dOp","angle","angle","angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","from","from","into","into","operator","operator","rotation","rotation","rotation","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Scale","ScaleOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","partial_cmp","scale","scale","scale","to_owned","try_from","try_into","type_id","Sided","SidedOp","axis","axis","axis","borrow","borrow_mut","clone","clone_into","cmp","default","default","default","eq","fmt","from","hash","into","operator","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","SmoothIntersection","SmoothIntersectionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothSubtraction","SmoothSubtractionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","SmoothUnion","SmoothUnionOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","k","k","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","StretchDist","StretchDistOp","StretchInfinite","StretchInfiniteOp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","default","default","dir","dir","dir","dir","dir","dir","dist","dist","dist","eq","eq","fmt","fmt","from","from","into","into","operator","operator","operator","operator","operator","operator","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Subtraction","SubtractionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Translate","TranslateOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","to_owned","translation","translation","translation","try_from","try_into","type_id","Twist","TwistOp","axis_pos","axis_pos","axis_pos","axis_rot","axis_rot","axis_rot","borrow","borrow_mut","clone","clone_into","default","default","eq","fmt","from","into","k","k","k","operator","operator","to_owned","try_from","try_into","type_id","Union","UnionOp","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","hash","into","operator","partial_cmp","sdf","sdf","sdf","to_owned","try_from","try_into","type_id","Output","Raymarch","RaymarchOutput","borrow","borrow_mut","clone","clone_into","default","dist","eq","fmt","from","hit","into","partial_cmp","raymarch","sphere_trace_lipschitz","sphere_trace_naive","steps","to_owned","try_from","try_into","type_id","SphereTraceLipschitz","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","raymarch","to_owned","try_from","try_into","type_id","SphereTraceNaive","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","raymarch","to_owned","try_from","try_into","type_id","SignedDistanceField","adapters","attributes","evaluate","metrics","shapes","extrude","extrude_interior","normals","sweep","Extrude","axis","axis","borrow","borrow_mut","clone","clone_into","default","depth","depth","eq","evaluate","evaluate","fmt","from","into","sdf","sdf","to_owned","try_from","try_into","type_id","ExtrudeInterior","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","evaluate","fmt","from","into","partial_cmp","to_owned","try_from","try_into","type_id","CentralDiffDerivative","CentralDiffNormal","Normalize","NormalizeOp","TetrahedronDerivative","TetrahedronNormal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","default","epsilon","epsilon","epsilon","epsilon","epsilon","eq","eq","eq","evaluate","evaluate","evaluate","evaluate","evaluate","fmt","fmt","fmt","from","from","from","hash","into","into","into","new","operator","operator","operator","partial_cmp","partial_cmp","partial_cmp","sdf","sdf","sdf","sdf","sdf","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Sweep","borrow","borrow_mut","clone","clone_into","cmp","core","core","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","shell","shell","to_owned","try_from","try_into","type_id","color","distance","normal","position","tangent","uv","Color","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Distance","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Normal","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","from","into","to_owned","to_string","try_from","try_into","type_id","Position","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Tangent","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","from","into","to_owned","to_string","try_from","try_into","type_id","Uv","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","chebyshev","euclidean","taxicab","ChebyshevMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","EuclideanMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","TaxicabMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","composite","lame_curve","octahedron","plane","squircle","Ball","Box","Capsule","Circle","Cube","Decagon","Hexagon","Line","NgonMirror","Nonagon","Octagon","Pentagon","Point","Quadrilateral","Septagon","Sphere","Square","Torus","Triangle","cos","decagon","hexagon","new","nonagon","octagon","pentagon","quadrilateral","radius","radius","radius","radius","radius","radius","radius","sdf","septagon","sin","tan","tan","tan","tan","tan","tan","triangle","LameCurve","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","fmt","from","into","n","n","partial_cmp","to_owned","try_from","try_into","type_id","Octahedron","borrow","borrow_mut","clone","clone_into","default","eq","evaluate","fmt","from","into","partial_cmp","size","size","to_owned","try_from","try_into","type_id","Plane","borrow","borrow_mut","clone","clone_into","default","default","default","dir","dir","eq","evaluate","evaluate","evaluate","fmt","from","into","to_owned","try_from","try_into","type_id","Squircle","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id"],"q":["rust_gpu_sdf","","","","","","","","","rust_gpu_sdf::bound_checker","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::axial_reflect","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::compose","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::composite","","","","","rust_gpu_sdf::operators::conditional","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::displace","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::elongate","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::hollow","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::intersection","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::isosurface","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::reflect","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::repeat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::rotate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::scale","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::sided","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_intersection","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_subtraction","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_union","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::stretch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::subtraction","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::translate","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::twist","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::union","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_lipschitz","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_naive","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field","","","","","","rust_gpu_sdf::signed_distance_field::adapters","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::extrude_interior","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::normals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::sweep","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes","","","","","","rust_gpu_sdf::signed_distance_field::attributes::color","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::distance","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::normal","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::position","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::tangent","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::uv","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics","","","rust_gpu_sdf::signed_distance_field::metrics::chebyshev","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::euclidean","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::taxicab","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes","","","","","rust_gpu_sdf::signed_distance_field::shapes::composite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::lame_curve","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::octahedron","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::plane","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::squircle","","","","","","","","","","","","","","","","",""],"d":["","","","","Free-standing <code>Default::default()</code> invocation","Types that modify a distance field.","","","Types that describe signed distance fields.","Asserts that the provided distance function is a field …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Applies a <code>SignedDistanceOperator</code> to a <code>SignedDistanceField</code>.","Modifies the input / output of a <code>SignedDistanceField</code>.","","Reflect a distance field about an arbitrary axis.","","","","","","","","","","Operators composed from other operators.","","","","","","","","","","Displace the output of a distance field using the output …","","","Extrude a shape along its axes, preserving exterior …","","","","","","Returns the argument unchanged.","","","Convert a solid shape into a hollow one with an infinitely …","Compute the boolean intersection of two distance fields.","Calls <code>U::from(self)</code>.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","","","","","","","","","","","","","","","Reflect a distance field about an arbitrary axis.","Operators for repeating distance fields across a domain.","Rotate a distance field.","","","Uniformly scale a distance field.","","","","","","","","","","","","","","Given an infinitely-thin surface, divide space into …","","Compute the blended boolean intersection of two distance …","Compute the blended boolean subtraction of two distance …","Compute the blended boolean union of two distance fields.","Stretch a shape along an arbitrary axis, preserving …","Compute the boolean subtraction of two distance fields.","","","","","","","","","","Apply a positional translation to a distance field.","","","","","Twist a distance field around an arbitrary axis.","","Compute the boolean union of two distance fields.","","","","","","Reflect a distance field about X / Y / Z","Cheaply reflect a distance field about X / Y / Z using a …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Converts a solid shape into a hollow one with the given …","Translate, rotate, and scale the wrapped SDF.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Displace the output of a distance field using the output …","Displace the output of a distance field using the output …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Extrude a shape along its axes, preserving exterior …","Extrude a shape along its axes, preserving exterior …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Convert a solid shape into a hollow one with an infinitely …","Convert a solid shape into a hollow one with an infinitely …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Compute the boolean intersection of two distance fields.","Compute the boolean intersection of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Add an arbitrary radius to a distance field.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Reflect a distance field about an arbitrary axis.","Reflect a distance field about an arbitrary axis.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Repeat a distance field a set number of times in one or …","Repeat a distance field a set number of times in one or …","Repeat a distance field infinitely in one or more axes.","Repeat a distance field infinitely in one or more axes.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Rotate a 3D distance field.","Rotate a distance field.","Rotate a distance field.","Rotate a distance field.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Uniformly scale a distance field.","Uniformly scale a distance field.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Given an infinitely-thin surface, divide space into …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Compute the blended boolean intersection of two distance …","Compute the blended boolean intersection of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean subtraction of two distance …","Compute the blended boolean subtraction of two distance …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Compute the blended boolean union of two distance fields.","Compute the blended boolean union of two distance fields.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Extrude a shape by an arbitrary distance along an …","Extrude a shape by an arbitrary distance along an …","Extrude a shape infinitely along an arbitrary axis.","Extrude a shape infinitely along an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Compute the boolean subtraction of two distance fields.","Compute the boolean subtraction of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Apply a positional translation to a distance field.","Apply a positional translation to a distance field.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Twist a distance field around an arbitrary axis.","Twist a distance field around an arbitrary axis.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Compute the boolean union of two distance fields.","Compute the boolean union of two distance fields.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Describes a shape in terms of distance to the nearest …","Distance fields that convert between other kinds of …","Attributes that can be computed by a distance field","","Distance metrics.","Distance field shapes.","Extrude a 2D distance field into 3D.","","","Create a 3D distance field by sweeping a 2D distance field …","Extrude a 2D distance field into 3D.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Extrude a 2D distance field into 3D, using its interior …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Create a 3D distance field by sweeping a 2D distance field …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Chebyshev distance metric.","Euclidean distance metric.","Taxicab distance metric.","Chebyshev distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Euclidian distance metric.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Taxicab distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Shapes composed from other shapes.","","An octahedron.","A plane.","","A ball.","A box.","A capsule.","A 2D circle.","A 3D cube.","","","An infinitely thin line. Not very useful on its own; …","","","","","An infinitely small point. Not very useful on its own; …","","","A 3D sphere.","A 2D square.","A 3D torus.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","An octahedron.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","A plane.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,14,0,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,0,14,14,0,14,14,14,14,14,14,14,14,0,0,14,0,14,14,14,14,14,14,14,14,14,14,105,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,14,14,14,14,0,14,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,49,46,46,49,46,46,46,46,46,46,0,0,50,51,51,0,0,19,19,19,19,19,52,19,19,19,19,19,19,19,19,19,19,19,0,0,27,27,27,27,27,27,53,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,30,30,30,30,30,30,30,30,30,54,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,44,0,0,25,25,25,25,25,56,25,25,25,25,25,25,25,25,25,25,25,25,0,0,57,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,38,20,38,20,38,20,38,20,58,20,20,38,38,38,20,20,38,20,38,20,38,20,38,20,38,20,20,59,58,38,20,38,20,38,20,38,20,38,20,38,20,0,0,0,0,60,13,13,13,40,13,40,13,40,13,40,13,40,13,40,13,40,13,40,13,40,13,40,61,40,40,13,40,13,40,13,40,13,40,0,0,42,42,42,42,42,42,42,42,42,42,42,62,42,42,42,42,42,42,0,0,63,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,32,32,32,32,32,32,32,32,32,64,32,32,32,32,64,32,32,32,32,32,32,0,0,33,33,33,33,33,33,33,33,33,65,33,33,33,33,65,33,33,33,33,33,33,0,0,34,34,34,34,34,34,34,34,34,66,34,34,34,34,66,34,34,34,34,34,34,0,0,0,0,26,22,26,22,26,22,26,22,26,26,22,22,22,67,68,26,22,26,22,68,22,22,26,22,26,22,26,22,26,22,26,26,26,22,22,22,26,22,26,22,26,22,26,22,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,69,43,43,43,43,43,43,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,70,23,23,23,23,23,0,0,71,18,18,71,18,18,18,18,18,18,18,18,18,18,18,18,71,18,18,18,18,18,18,18,18,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,72,45,45,45,45,45,45,106,0,0,73,73,73,73,73,73,73,73,73,73,73,73,106,0,0,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,107,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,0,0,28,78,29,28,78,29,28,78,29,28,78,29,28,28,78,29,79,78,29,78,29,28,78,29,78,78,29,29,29,28,78,29,28,78,29,28,28,78,29,79,28,28,28,28,78,29,79,78,29,78,29,28,78,29,28,78,29,28,78,29,28,78,29,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,92,93,91,94,95,96,97,98,99,97,96,100,95,94,91,100,91,99,97,96,100,95,94,99,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104],"f":[0,0,0,0,[[],1],0,0,0,0,0,0,[[]],[[]],[[[3,[2,2]]],[[3,[2,2]]]],[[]],[[],3],0,[[[3,[4,4]],3],5],[[[3,[6,6]],7],8],[[]],[[]],[[[3,[9]]],5],[[[3,[10]]],5],[[[3,[9]]],5],[[[3,[10]]],5],0,0,0,[[]],[[],11],[[],11],[[],12],0,0,[[[14,[13]]],15],0,[[[14,[16]]]],[[[14,[17]]]],[[[14,[18]]]],[[[14,[18]]]],[[]],[[]],[[[14,[2,2]]],[[14,[2,2]]]],[[]],0,0,0,[[[14,[19]]]],[[[14,[[17,[10]]]]],15],[[[14,[20]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]],[[],[[14,[1,1]]]],[[[14,[25]]],15],[[[14,[22]]]],[[[14,[26]]]],0,[[[14,[27]]]],[[[14,[22]]],15],0,[[[14,[28,29]]],15],[[[14,[4,4]],14],5],[14],[[[14,[30]]]],[[[14,[6,6]],7],8],[[]],[[[14,[31,31]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]],0,0,[[]],0,[[[14,[32]]],15],[[[14,[33]]],15],[[[14,[34]]],15],[[[14,[18]]],15],[[15,15],[[14,[[17,[10]]]]]],[15,[[14,[28,29]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]],[14],0,[[]],[[[14,[35,35]],14],[[37,[36]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]],[[[14,[20]]]],[[[14,[38]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]],[[[14,[25,24]]],15],[[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]],15],[[[14,[25,[14,[39]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]],15],0,0,0,[[[14,[40]]],41],[[[14,[23,[14,[40,[14,[42]]]]]]],41],0,[[[14,[42]]],15],[[[14,[23,[14,[40,[14,[42]]]]]]],15],[[[14,[43]]]],[[[14,[32]]]],[[[14,[44]]]],[[[14,[[17,[10]]]]]],[[[14,[45]]]],[[[14,[28,29]]]],[[[14,[34]]]],[[[14,[33]]]],[[[14,[46]]]],[[[14,[46]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]]],0,[[[14,[[17,[10]]]]],15],0,0,0,0,0,[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]]]],15],[[[14,[21,[14,[[17,[10]],[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]]],15],[14],0,[[]],0,[[[14,[23]]]],[[],[[14,[21,[14,[[17,[10]],[14,[[22,[10]],[14,[[23,[10]],[14,[[16,[10]],24]]]]]]]]]]]],[[],11],[[],11],0,[[],12],0,0,0,0,0,0,0,0,[[]],[[]],[21,21],[[]],[[],21],[[21,21],5],[[21,7],8],[[]],[[]],[[21,9],47],[[21,15],47],[[21,10],47],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[46,[2,2]]],[[46,[2,2]]]],[[]],[[[46,[48,48]],46],36],[[],[[46,[1,1]]]],[[[46,[4,4]],46],5],[[[46,[6,6]],7],8],[[]],[[[46,[31,31]]]],[[]],[[46,9],47],[[46,10],47],[[[46,[35,35]],46],[[37,[36]]]],[49],[46],0,[49],[46],0,[[]],[[],11],[[],11],[[],12],0,0,[50,15],[51,41],[51,15],0,0,[[]],[[]],[[[19,[2]]],[[19,[2]]]],[[]],[[[19,[48]],19],36],[52],[[],[[19,[1]]]],[[[19,[4]],19],5],[[[19,[6]],7],8],[[]],[[]],[19,47],[[[19,[35]],19],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[27,[2]]],[[27,[2]]]],[[]],[[[27,[48]],27],36],[[],[[27,[1]]]],[53],[27],0,[[[27,[4]],27],5],[[[27,[6]],7],8],[[]],[[[27,[31]]]],[[]],[27,47],[[[27,[35]],27],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[30,[2]]],[[30,[2]]]],[[]],[[[30,[48]],30],36],[[],[[30,[9]]]],[[],[[30,[10]]]],[[],[[30,[15]]]],[[[30,[4]],30],5],[54],[30],0,[[[30,[6]],7],8],[[]],[[[30,[31]]]],[[]],[[[30,[15]],15],47],[[[30,[9]],9],47],[[[30,[10]],10],47],[[[30,[35]],30],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[39,39],[[]],[[],39],[[39,39],5],[[39,7],8],[[]],[[]],[[39,10],47],[[39,9],47],[[39,15],47],[[39,39],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[44,[2]]],[[44,[2]]]],[[]],[[[44,[48]],44],36],[[],[[44,[1]]]],[[[44,[4]],44],5],[[[44,[6]],7],8],[[]],[[[44,[31]]]],[[]],[44,47],[[[44,[35]],44],[[37,[36]]]],[55],[44],0,[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[25,25],[[]],[[],25],[56,15],[25,15],0,[[25,25],5],[[25,7],8],[[]],[[]],[25,47],[[25,25],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[57],[17],0,[[]],[[]],[[[17,[2]]],[[17,[2]]]],[[]],[[],[[17,[10]]]],[[],[[17,[15]]]],[[],[[17,[9]]]],[[[17,[4]],17],5],[[[17,[6]],7],8],[[]],[[]],[[[17,[9]],9],47],[[[17,[10]],10],47],[[[17,[15]],15],47],[[]],[[],11],[[],11],[[],12],0,0,0,0,[[]],[[]],[[]],[[]],[[[38,[2]]],[[38,[2]]]],[[[20,[2]]],[[20,[2]]]],[[]],[[]],[58],[20],0,[[],[[38,[10]]]],[[],[[38,[9]]]],[[],[[38,[15]]]],[[],[[20,[9]]]],[[],[[20,[10]]]],[[[38,[4]],38],5],[[[20,[4]],20],5],[[[38,[6]],7],8],[[[20,[6]],7],8],[[]],[[]],[[]],[[]],[38,47],[[[20,[10]],10],47],[[[20,[9]],9],47],[59],[58],[38],[20],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,[60,15],[13,15],0,[[]],[[]],[[]],[[]],[13,13],[40,40],[[]],[[]],[[],13],[[],40],[[13,13],5],[[40,40],5],[[13,7],8],[[40,7],8],[[]],[[]],[[]],[[]],[[13,10],47],[[40,9],47],[61,41],[40,41],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,[[]],[[]],[42,42],[[]],[[],42],[[42,42],5],[[42,7],8],[[]],[[]],[42,47],[[42,42],[[37,[36]]]],[62,15],[42,15],0,[[]],[[],11],[[],11],[[],12],0,0,[63],[16],0,[[]],[[]],[[[16,[2]]],[[16,[2]]]],[[]],[[[16,[48]],16],36],[[],[[16,[15]]]],[[],[[16,[9]]]],[[],[[16,[10]]]],[[[16,[4]],16],5],[[[16,[6]],7],8],[[]],[[[16,[31]]]],[[]],[[[16,[15]],15],47],[[[16,[10]],10],47],[[[16,[9]],9],47],[[[16,[35]],16],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[32,[2]]],[[32,[2]]]],[[]],[[],[[32,[1]]]],[[[32,[4]],32],5],[[[32,[6]],7],8],[[]],[[]],[64,15],[32,15],0,[32,47],[[[32,[35]],32],[[37,[36]]]],[64],[32],0,[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[33,[2]]],[[33,[2]]]],[[]],[[],[[33,[1]]]],[[[33,[4]],33],5],[[[33,[6]],7],8],[[]],[[]],[65,15],[33,15],0,[33,47],[[[33,[35]],33],[[37,[36]]]],[65],[33],0,[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[34,[2]]],[[34,[2]]]],[[]],[[],[[34,[1]]]],[[[34,[4]],34],5],[[[34,[6]],7],8],[[]],[[]],[66,15],[34,15],0,[34,47],[[[34,[35]],34],[[37,[36]]]],[66],[34],0,[[]],[[],11],[[],11],[[],12],0,0,0,0,[[]],[[]],[[]],[[]],[[[26,[2]]],[[26,[2]]]],[[[22,[2]]],[[22,[2]]]],[[]],[[]],[[],[[26,[10]]]],[[],[[26,[9]]]],[[],[[22,[10]]]],[[],[[22,[15]]]],[[],[[22,[9]]]],[67],[68],[26],[22],0,0,[68,15],[22,15],0,[[[26,[4]],26],5],[[[22,[4]],22],5],[[[26,[6]],7],8],[[[22,[6]],7],8],[[]],[[]],[[]],[[]],[[[26,[10]],10],47],[[[26,[9]],9],47],[[[26,[15]],15],47],[[[22,[15]],15],47],[[[22,[9]],9],47],[[[22,[10]],10],47],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,[[]],[[]],[[[43,[2]]],[[43,[2]]]],[[]],[[[43,[48]],43],36],[[],[[43,[1]]]],[[[43,[4]],43],5],[[[43,[6]],7],8],[[]],[[[43,[31]]]],[[]],[43,47],[[[43,[35]],43],[[37,[36]]]],[69],[43],0,[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[23,[2]]],[[23,[2]]]],[[]],[[[23,[48]],23],36],[[],[[23,[1]]]],[[[23,[4]],23],5],[[[23,[6]],7],8],[[]],[[[23,[31]]]],[[]],[23,47],[[[23,[35]],23],[[37,[36]]]],[[]],[70],[23],0,[[],11],[[],11],[[],12],0,0,[71],[18],0,[71],[18],0,[[]],[[]],[[[18,[2]]],[[18,[2]]]],[[]],[[],[[18,[9]]]],[[],[[18,[10]]]],[[[18,[4]],18],5],[[[18,[6]],7],8],[[]],[[]],[71,15],[18,15],0,[[[18,[10]],10],47],[[[18,[9]],9],47],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[[45,[2]]],[[45,[2]]]],[[]],[[[45,[48]],45],36],[[],[[45,[1]]]],[[[45,[4]],45],5],[[[45,[6]],7],8],[[]],[[[45,[31]]]],[[]],[45,47],[[[45,[35]],45],[[37,[36]]]],[72],[45],0,[[]],[[],11],[[],11],[[],12],0,0,0,[[]],[[]],[73,73],[[]],[[],73],0,[[73,73],5],[[73,7],8],[[]],0,[[]],[[73,73],[[37,[36]]]],[[15,15,9,9,15]],0,0,0,[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[74,74],[[]],[[],74],[[74,74],5],[[74,7],8],[[]],[[]],0,[[74,15,15,9,9,15]],[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[75,75],[[]],[[],75],[[75,75],5],[[75,7],8],[[]],[[]],[[75,15,15,9,9,15]],[[]],[[],11],[[],11],[[],12],0,0,0,[[]],0,0,0,0,0,0,0,[76,9],0,[[]],[[]],[[[76,[2]]],[[76,[2]]]],[[]],[[],[[76,[1]]]],[76,15],0,[[[76,[4]],76],5],[[76,10],47],[[76,9],47],[[[76,[6]],7],8],[[]],[[]],[76],0,[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[[[77,[2]]],[[77,[2]]]],[[]],[[],77],[[[77,[4]],77],5],[[77,9],47],[[77,10],47],[[[77,[6]],7],8],[[]],[[]],[[[77,[35]],77],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[[[78,[2]]],[[78,[2]]]],[[[29,[2]]],[[29,[2]]]],[[]],[[]],[[]],[[28,28],36],[[],28],[[],[[78,[1]]]],[[],[[29,[1]]]],[79,15],[78,15],[29,15],0,0,[[28,28],5],[[[78,[4]],78],5],[[[29,[4]],29],5],[[78,9],[[80,[9]]]],[[78,10],[[80,[10]]]],[[29,10],[[80,[10]]]],[[29,15],[[80,[15]]]],[[29,9],[[80,[9]]]],[[28,7],8],[[[78,[6]],7],8],[[[29,[6]],7],8],[[]],[[]],[[]],[28],[[]],[[]],[[]],[15,79],[[28,10],[[80,[10]]]],[[28,9],[[80,[9]]]],[[28,15],[[80,[15]]]],[[28,28],[[37,[36]]]],[[[78,[35]],78],[[37,[36]]]],[[[29,[35]],29],[[37,[36]]]],[79],[78],[29],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,[[]],[[]],[[[81,[2,2]]],[[81,[2,2]]]],[[]],[[[81,[48,48]],81],36],[81],0,[[],[[81,[1,1]]]],[[[81,[4,4]],81],5],[[81,10],47],[[81,9],47],[[[81,[6,6]],7],8],[[]],[[[81,[31,31]]]],[[]],[[[81,[35,35]],81],[[37,[36]]]],[81],0,[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,[[]],[[]],[82,82],[[]],[[],82],[82],[82],[[82,82],5],[[82,7],8],[[82,7],8],[83,82],[[]],[[]],[[]],[[],84],[[],11],[[],11],[[],12],0,[[]],[[]],[47,47],[[]],[[],47],[47],[47],[[47,47],5],[[47,7],8],[[47,7],8],[[]],[15,47],[[]],[[47,47],[[37,[36]]]],[[]],[[],84],[[],11],[[],11],[[],12],0,[[]],[[]],[[[80,[2]]],[[80,[2]]]],[[]],[[],[[80,[1]]]],[80],[80],[[[80,[4]],80],5],[[[80,[6]],7],8],[[80,7],8],[[],80],[[]],[85],[[]],[[]],[[],84],[[],11],[[],11],[[],12],0,[[]],[[]],[86,86],[[]],[[],86],[86],[86],[[86,86],5],[[86,7],8],[[86,7],8],[[]],[9,86],[[]],[[]],[[],84],[[],11],[[],11],[[],12],0,[[]],[[]],[[[87,[2]]],[[87,[2]]]],[[]],[[],[[87,[1]]]],[87],[87],[[[87,[4]],87],5],[[[87,[6]],7],8],[[87,7],8],[[]],[85],[[],87],[[]],[[]],[[],84],[[],11],[[],11],[[],12],0,[[]],[[]],[88,88],[[]],[[],88],[88],[88],[[88,88],5],[[88,7],8],[[88,7],8],[[]],[10,88],[[]],[[]],[[],84],[[],11],[[],11],[[],12],0,0,0,0,[[]],[[]],[89,89],[[]],[[89,89],36],[[],89],[[89,89],5],[[89,10],47],[[89,9],47],[[89,15],47],[[89,7],8],[[]],[89],[[]],[[89,89],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[24,24],[[]],[[24,24],36],[[],24],[[24,24],5],[[24,15],47],[[24,9],[[80,[9]]]],[[24,10],[[80,[10]]]],[[24,15],[[80,[15]]]],[[24,9],47],[[24,10],47],[[24,7],8],[[]],[24],[[]],[[24,24],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[90,90],[[]],[[90,90],36],[[],90],[[90,90],5],[[90,15],47],[[90,10],47],[[90,9],47],[[90,7],8],[[]],[90],[[]],[[90,90],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[91,15],[[],92],[[],93],[[15,15],91],[[],94],[[],95],[[],96],[[],97],[98,15],[99,15],[97,15],[96,15],[100,15],[95,15],[94,15],[91],[[],100],[91,15],[99,15],[97,15],[96,15],[100,15],[95,15],[94,15],[[],99],0,[[]],[[]],[101,101],[[]],[[],101],[[101,101],5],[[101,10],47],[[101,7],8],[[]],[[]],[101,15],0,[[101,101],[[37,[36]]]],[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[102,102],[[]],[[],102],[[102,102],5],[[102,9],47],[[102,7],8],[[]],[[]],[[102,102],[[37,[36]]]],[102,15],0,[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[[[103,[2]]],[[103,[2]]]],[[]],[[],[[103,[10]]]],[[],[[103,[15]]]],[[],[[103,[9]]]],[103],0,[[[103,[4]],103],5],[[[103,[15]],15],47],[[[103,[10]],10],47],[[[103,[9]],9],47],[[[103,[6]],7],8],[[]],[[]],[[]],[[],11],[[],11],[[],12],0,[[]],[[]],[104,104],[[]],[[104,104],36],[[],104],[[104,104],5],[[104,10],47],[[104,7],8],[[]],[104],[[]],[[104,104],[[37,[36]]]],[[]],[[],11],[[],11],[[],12]],"p":[[8,"Default"],[8,"Clone"],[3,"BoundChecker"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Vec3"],[3,"Vec2"],[4,"Result"],[3,"TypeId"],[3,"Rotate2dOp"],[3,"Operator"],[15,"f32"],[3,"SidedOp"],[3,"ReflectOp"],[3,"TwistOp"],[3,"ConditionalOp"],[3,"RepeatCountOp"],[3,"AxialReflectOp"],[3,"StretchDistOp"],[3,"TranslateOp"],[3,"EuclideanMetric"],[3,"IsosurfaceOp"],[3,"StretchInfiniteOp"],[3,"DisplaceOp"],[3,"NormalizeOp"],[3,"CentralDiffDerivative"],[3,"ElongateOp"],[8,"Hash"],[3,"SmoothIntersectionOp"],[3,"SmoothSubtractionOp"],[3,"SmoothUnionOp"],[8,"PartialOrd"],[4,"Ordering"],[4,"Option"],[3,"RepeatInfiniteOp"],[3,"HollowOp"],[3,"Rotate3dOp"],[3,"Quat"],[3,"ScaleOp"],[3,"SubtractionOp"],[3,"IntersectionOp"],[3,"UnionOp"],[3,"ComposeOp"],[3,"Distance"],[8,"Ord"],[6,"Compose"],[6,"Onion"],[6,"Transform"],[6,"Conditional"],[6,"Displace"],[6,"Elongate"],[6,"Intersection"],[6,"Isosurface"],[6,"Reflect"],[6,"RepeatCount"],[6,"RepeatInfinite"],[6,"Rotate2d"],[6,"Rotate3d"],[6,"Scale"],[6,"Sided"],[6,"SmoothIntersection"],[6,"SmoothSubtraction"],[6,"SmoothUnion"],[6,"StretchInfinite"],[6,"StretchDist"],[6,"Subtraction"],[6,"Translate"],[6,"Twist"],[6,"Union"],[3,"RaymarchOutput"],[3,"SphereTraceLipschitz"],[3,"SphereTraceNaive"],[3,"Extrude"],[3,"ExtrudeInterior"],[3,"TetrahedronDerivative"],[6,"CentralDiffNormal"],[3,"Normal"],[3,"Sweep"],[3,"Color"],[3,"Vec4"],[3,"String"],[15,"never"],[3,"Position"],[3,"Tangent"],[3,"Uv"],[3,"ChebyshevMetric"],[3,"TaxicabMetric"],[6,"NgonMirror"],[6,"Decagon"],[6,"Hexagon"],[6,"Nonagon"],[6,"Octagon"],[6,"Pentagon"],[6,"Quadrilateral"],[6,"Ball"],[6,"Triangle"],[6,"Septagon"],[3,"LameCurve"],[3,"Octahedron"],[3,"Plane"],[3,"Squircle"],[8,"SignedDistanceOperator"],[8,"Raymarch"],[8,"SignedDistanceField"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
