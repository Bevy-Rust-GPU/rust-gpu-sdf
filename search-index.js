var searchIndex = JSON.parse('{\
"rust_gpu_sdf":{"doc":"","t":[6,6,5,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,8,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,0,12,10,11,11,11,0,0,0,0,0,0,0,0,0,12,11,11,11,0,11,11,11,11,11,11,0,11,11,11,0,6,6,18,18,18,6,6,6,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,6,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,6,3,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,6,3,3,3,6,6,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,6,3,3,6,6,3,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,18,18,18,18,6,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,6,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,6,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,6,3,3,3,6,6,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,18,18,18,18,18,18,6,3,3,3,3,6,6,6,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,16,8,3,11,11,11,11,11,12,11,11,11,12,11,11,10,0,0,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,0,0,0,0,0,18,18,3,3,3,3,18,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,18,18,18,18,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,6,6,6,6,6,6,6,6,18,6,6,6,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["D2","D3","default","operators","prelude","raymarch","signed_distance_field","ANGLE","AXIS","AXIS_POS","AXIS_ROT","COUNT","DELTA","DIR","DIR","DISPLACE","DIST","EXTENT","K","K","K","K","OP","Operator","Operator_Op","Operator_Target","PERIOD","PERIOD","RADIUS","RADIUS","ROTATION","ROTATION","SCALE","SCALE","SDF","SDF","SDF","SDF","SDF","SDF","SignedDistanceOperator","TARGET","TRANSLATION","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","composite","default","default","default","displace","elongate","eq","eq","eq","evaluate","field","field","fmt","fmt","fmt","from","from","from","hash","hash","hash","hollow","intersection","into","into","into","isosurface","op","operator","partial_cmp","partial_cmp","partial_cmp","reflect","repeat","rotate","scale","smooth_intersection","smooth_subtraction","smooth_union","stretch","subtraction","target","to_owned","to_owned","to_owned","translate","try_from","try_from","try_from","try_into","try_into","try_into","twist","type_id","type_id","type_id","union","Onion","Onion_Radius","RADIUS","ROTATION","SCALE","Transform","Transform_Rotation","Transform_Scale","DISPLACE","DISPLACE","Displace","DisplaceOp","DisplaceOp_Displace","Displace_Displace","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","displace","eq","eq","field","fmt","fmt","from","from","hash","hash","into","into","operator","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","EXTENT","EXTENT","Elongate","ElongateOp","ElongateOp_Extent","Elongate_Extent","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","default","default","eq","extent","field","fmt","fmt","from","from","hash","into","into","operator","operator","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Hollow","HollowOp","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","operator","operator","partial_cmp","to_owned","try_from","try_into","type_id","Intersection","IntersectionOp","IntersectionOp_Sdf","Intersection_Sdf","SDF","SDF","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","field","fmt","fmt","from","from","hash","hash","into","into","operator","operator","partial_cmp","partial_cmp","sdf","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DELTA","DELTA","Isosurface","IsosurfaceOp","IsosurfaceOp_Delta","Isosurface_Delta","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","delta","eq","eq","field","fmt","fmt","from","from","hash","into","into","operator","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AXIS","AXIS","Reflect","ReflectOp","ReflectOp_Axis","Reflect_Axis","axis","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","default","eq","eq","field","fmt","fmt","from","from","hash","into","into","operator","operator","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","COUNT","COUNT","PERIOD","PERIOD","PERIOD","PERIOD","RepeatCount","RepeatCountOp","RepeatCountOp_Count","RepeatCountOp_Period","RepeatCount_Count","RepeatCount_Period","RepeatInfinite","RepeatInfiniteOp","RepeatInfiniteOp_Period","RepeatInfinite_Period","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","count","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","field","field","field","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","operator","operator","operator","operator","partial_cmp","partial_cmp","partial_cmp","period","period","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ANGLE","ANGLE","ROTATION","ROTATION","Rotate2d","Rotate2dOp","Rotate2dOp_Angle","Rotate2d_Angle","Rotate3d","Rotate3dOp","Rotate3dOp_Rotation","Rotate3d_Rotation","angle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","default","eq","eq","eq","eq","field","field","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","into","into","into","into","operator","operator","partial_cmp","partial_cmp","rotation","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SCALE","SCALE","Scale","ScaleOp","ScaleOp_Scale","Scale_Scale","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","eq","eq","field","fmt","fmt","from","from","hash","into","into","operator","partial_cmp","partial_cmp","scale","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","K","K","SDF","SDF","SmoothIntersection","SmoothIntersectionOp","SmoothIntersectionOp_K","SmoothIntersectionOp_Sdf","SmoothIntersection_K","SmoothIntersection_Sdf","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","eq","eq","eq","field","field","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","k","operator","partial_cmp","partial_cmp","partial_cmp","sdf","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","K","K","SDF","SDF","SmoothSubtraction","SmoothSubtractionOp","SmoothSubtractionOp_K","SmoothSubtractionOp_Sdf","SmoothSubtraction_K","SmoothSubtraction_Sdf","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","eq","eq","eq","field","field","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","k","operator","partial_cmp","partial_cmp","partial_cmp","sdf","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","K","K","SDF","SDF","SmoothUnion","SmoothUnionOp","SmoothUnionOp_K","SmoothUnionOp_Sdf","SmoothUnion_K","SmoothUnion_Sdf","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","eq","eq","eq","field","field","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","k","operator","partial_cmp","partial_cmp","partial_cmp","sdf","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","DIR","DIR","DIR","DIR","DIST","DIST","StretchDist","StretchDistOp","StretchDistOp_Dir","StretchDistOp_Dist","StretchDist_Dir","StretchDist_Dist","StretchInfinite","StretchInfiniteOp","StretchInfiniteOp_Dir","StretchInfinite_Dir","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","default","default","default","dir","dir","dist","eq","eq","eq","eq","eq","field","field","field","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","operator","operator","operator","operator","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","SDF","SDF","Subtraction","SubtractionOp","SubtractionOp_Sdf","Subtraction_Sdf","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","field","fmt","fmt","from","from","hash","hash","into","into","operator","partial_cmp","partial_cmp","sdf","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","TRANSLATION","TRANSLATION","Translate","TranslateOp","TranslateOp_Translation","Translate_Translation","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","field","fmt","fmt","from","from","hash","hash","into","into","operator","partial_cmp","partial_cmp","to_owned","to_owned","translation","try_from","try_from","try_into","try_into","type_id","type_id","AXIS_POS","AXIS_POS","AXIS_ROT","AXIS_ROT","K","K","Twist","TwistOp","TwistOp_AxisPos","TwistOp_AxisRot","TwistOp_K","Twist_AxisPos","Twist_AxisRot","Twist_K","axis_pos","axis_rot","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","default","eq","eq","eq","eq","field","field","field","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","into","into","into","into","k","operator","operator","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SDF","SDF","Union","UnionOp","UnionOp_Sdf","Union_Sdf","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","field","fmt","fmt","from","from","hash","hash","into","into","operator","partial_cmp","partial_cmp","sdf","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Output","Raymarch","RaymarchOutput","borrow","borrow_mut","clone","clone_into","default","dist","eq","fmt","from","hit","into","partial_cmp","raymarch","sphere_trace_lipschitz","sphere_trace_naive","steps","to_owned","try_from","try_into","type_id","SphereTraceLipschitz","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","k","raymarch","to_owned","try_from","try_into","type_id","SphereTraceNaive","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","raymarch","to_owned","try_from","try_into","type_id","SignedDistanceField","adapters","attributes","evaluate","metrics","shapes","extrude","normals","sweep","AXIS","DEPTH","Extrude","Extrude_Axis","Extrude_Depth","Extrude_Sdf","SDF","axis","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","depth","eq","eq","eq","eq","evaluate","field","field","field","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","sdf","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CentralDiffNormals","CentralDiffNormals_Epsilon","CentralDiffNormals_Sdf","EPSILON","EPSILON","SDF","SDF","TetrahedronNormals","TetrahedronNormals_Epsilon","TetrahedronNormals_Sdf","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","default","default","epsilon","epsilon","eq","eq","eq","eq","eq","eq","evaluate","evaluate","field","field","field","field","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","sdf","sdf","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","CORE","SHELL","Sweep","Sweep_Core","Sweep_Shell","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","core","default","default","default","eq","eq","eq","evaluate","field","field","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","partial_cmp","partial_cmp","partial_cmp","shell","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","color","distance","normal","position","tangent","uv","Color","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Distance","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Normal","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Position","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Tangent","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","Uv","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","eq","fmt","fmt","from","from","into","to_owned","to_string","try_from","try_into","type_id","chebyshev","euclidean","taxicab","ChebyshevMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","EuclideanMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","TaxicabMetric","borrow","borrow_mut","clone","clone_into","cmp","default","eq","evaluate","evaluate","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","composite","octahedron","plane","Ball","Box","Capsule","Circle","Circle_Radius","Cube","Line","Point","RADIUS","Sphere","Square","Torus","Octahedron","Octahedron_Size","SIZE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","eq","eq","evaluate","field","fmt","fmt","from","from","hash","into","into","partial_cmp","partial_cmp","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DIR","Plane","Plane_Dir","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","default","default","dir","eq","eq","evaluate","evaluate","field","fmt","fmt","from","from","hash","into","into","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["rust_gpu_sdf","","","","","","","rust_gpu_sdf::operators","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::composite","","","","","","","","rust_gpu_sdf::operators::displace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::elongate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::hollow","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::isosurface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::reflect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::repeat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::rotate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::scale","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_subtraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::smooth_union","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::stretch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::subtraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::translate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::twist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::operators::union","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_lipschitz","","","","","","","","","","","","","","","","rust_gpu_sdf::raymarch::sphere_trace_naive","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field","","","","","","rust_gpu_sdf::signed_distance_field::adapters","","","rust_gpu_sdf::signed_distance_field::adapters::extrude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::normals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::adapters::sweep","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes","","","","","","rust_gpu_sdf::signed_distance_field::attributes::color","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::distance","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::normal","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::position","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::tangent","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::attributes::uv","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics","","","rust_gpu_sdf::signed_distance_field::metrics::chebyshev","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::euclidean","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::metrics::taxicab","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes","","","rust_gpu_sdf::signed_distance_field::shapes::composite","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::octahedron","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_gpu_sdf::signed_distance_field::shapes::plane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Free-standing <code>Default::default()</code> invocation","Types that modify a distance field.","","","Types that describe signed distance fields.","","","","","","","","","","","","","","","","","Applies a <code>SignedDistanceOperator</code> to a <code>SignedDistanceField</code>.","","","","","","","","","","","","","","","","","Modifies the input / output of a <code>SignedDistanceField</code>.","","","","","","","","","","","","","","","","","Operators composed from other operators.","","","","Displace the output of a distance field using the output …","Extrude a shape along its axes, preserving exterior …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Convert a solid shape into a hollow one with an infinitely …","Compute the boolean intersection of two distance fields.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Shift the isosurface of a distance field by a given amount.","","","","","","Reflect a distance field about an arbitrary axis.","Operators for repeating distance fields across a domain.","Rotate a distance field.","Uniformly scale a distance field.","Compute the blended boolean intersection of two distance …","Compute the blended boolean subtraction of two distance …","Compute the blended boolean union of two distance fields.","Stretch a shape along an arbitrary axis, preserving …","Compute the boolean subtraction of two distance fields.","","","","","Apply a positional translation to a distance field.","","","","","","","Twist a distance field around an arbitrary axis.","","","","Compute the boolean union of two distance fields.","Converts a solid shape into a hollow one with the given …","","","","","Translate, rotate, and scale the wrapped SDF.","","","","","Displace the output of a distance field using the output …","Displace the output of a distance field using the output …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Extrude a shape along its axes, preserving exterior …","Extrude a shape along its axes, preserving exterior …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Convert a solid shape into a hollow one with an infinitely …","Convert a solid shape into a hollow one with an infinitely …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Compute the boolean intersection of two distance fields.","Compute the boolean intersection of two distance fields.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Add an arbitrary radius to a distance field.","Shift the isosurface of a distance field by a given amount.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Reflect a distance field about an arbitrary axis.","Reflect a distance field about an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Repeat a distance field a set number of times in one or …","Repeat a distance field a set number of times in one or …","","","","","Repeat a distance field infinitely in one or more axes.","Repeat a distance field infinitely in one or more axes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rotate a 3D distance field.","Rotate a distance field.","","","Rotate a distance field.","Rotate a distance field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Uniformly scale a distance field.","Uniformly scale a distance field.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Compute the blended boolean intersection of two distance …","Compute the blended boolean intersection of two distance …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Compute the blended boolean subtraction of two distance …","Compute the blended boolean subtraction of two distance …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Compute the blended boolean union of two distance fields.","Compute the blended boolean union of two distance fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Extrude a shape by an arbitrary distance along an …","Extrude a shape by an arbitrary distance along an …","","","","","Extrude a shape infinitely along an arbitrary axis.","Extrude a shape infinitely along an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the boolean subtraction of two distance fields.","Compute the boolean subtraction of two distance fields.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Apply a positional translation to a distance field.","Apply a positional translation to a distance field.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Twist a distance field around an arbitrary axis.","Twist a distance field around an arbitrary axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Compute the boolean union of two distance fields.","Compute the boolean union of two distance fields.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Describes a shape in terms of distance to the nearest …","Distance fields that convert between other kinds of …","Attributes that can be computed by a distance field","","Distance metrics.","Distance field shapes.","Extrude a 2D distance field into 3D.","","Create a 3D distance field by sweeping a 2D distance field …","","","Extrude a 2D distance field into 3D.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a 3D distance field by sweeping a 2D distance field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Chebyshev distance metric.","Euclidean distance metric.","Taxicab distance metric.","Chebyshev distance metric.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Euclidian distance metric.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Taxicab distance metric.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Shapes composed from other shapes.","An octahedron.","A plane.","A ball.","A box.","A capsule.","A 2D circle.","","A 3D cube.","An infinitely thin line. Not very useful on its own; …","An infinitely small point. Not very useful on its own; …","","A 3D sphere.","A 2D square.","A 3D torus.","An octahedron.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A plane.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,4,5,3,4,5,3,4,5,3,4,5,4,5,0,3,4,5,0,0,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,0,0,3,4,5,0,3,98,3,4,5,0,0,0,0,0,0,0,0,0,3,3,4,5,0,3,4,5,3,4,5,0,3,4,5,0,0,0,99,100,100,0,0,0,101,17,0,0,0,0,17,18,17,18,17,18,17,18,17,18,17,18,17,17,18,18,17,18,17,18,17,18,17,18,17,17,18,17,18,17,18,17,18,17,18,102,23,0,0,0,0,23,21,23,21,21,21,21,23,23,21,21,23,21,23,21,23,21,21,23,21,23,23,21,21,23,21,23,21,23,21,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,103,26,26,27,26,27,26,27,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,26,26,26,27,26,26,27,26,27,26,27,26,27,104,28,0,0,0,0,28,29,28,29,28,29,28,29,29,28,29,28,28,29,29,28,29,28,29,29,28,29,28,28,29,28,29,28,29,28,29,28,29,105,30,0,0,0,0,30,30,31,30,31,30,31,30,31,31,30,30,31,30,31,31,30,31,30,31,31,30,31,30,30,31,30,31,30,31,30,31,30,31,106,34,107,106,32,34,0,0,0,0,0,0,0,0,0,0,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,33,35,36,34,32,32,33,34,34,35,36,32,33,34,35,36,33,35,36,32,33,34,35,36,32,33,34,35,36,33,35,36,32,33,34,35,36,32,32,34,34,33,35,36,32,34,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,108,37,109,39,0,0,0,0,0,0,0,0,37,37,38,39,40,37,38,39,40,37,38,39,40,37,38,39,40,38,40,37,38,39,40,37,38,39,40,38,40,37,38,39,40,37,38,39,40,38,40,37,38,39,40,37,39,38,40,39,37,38,39,40,37,38,39,40,37,38,39,40,37,38,39,40,110,41,0,0,0,0,41,42,41,42,41,42,41,42,42,41,42,41,42,42,41,42,41,42,42,41,42,41,41,42,41,41,42,41,42,41,42,41,42,111,43,111,43,0,0,0,0,0,0,43,44,45,43,44,45,43,44,45,43,44,45,44,45,43,44,45,43,44,45,44,45,43,44,45,43,44,45,44,45,43,44,45,43,43,43,44,45,43,43,44,45,43,44,45,43,44,45,43,44,45,112,46,112,46,0,0,0,0,0,0,46,47,48,46,47,48,46,47,48,46,47,48,47,48,46,47,48,46,47,48,47,48,46,47,48,46,47,48,47,48,46,47,48,46,46,46,47,48,46,46,47,48,46,47,48,46,47,48,46,47,48,113,49,113,49,0,0,0,0,0,0,49,50,51,49,50,51,49,50,51,49,50,51,50,51,49,50,51,49,50,51,50,51,49,50,51,49,50,51,50,51,49,50,51,49,49,49,50,51,49,49,50,51,49,50,51,49,50,51,49,50,51,114,115,52,54,115,54,0,0,0,0,0,0,0,0,0,0,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,53,55,56,52,52,53,54,54,55,56,52,54,54,52,53,54,55,56,53,55,56,52,53,54,55,56,52,53,54,55,56,53,55,56,52,53,54,55,56,52,52,54,54,53,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,52,53,54,55,56,116,57,0,0,0,0,57,58,57,58,57,58,57,58,57,58,57,58,57,58,58,57,58,57,58,57,58,57,58,57,57,58,57,57,58,57,58,57,58,57,58,117,59,0,0,0,0,59,60,59,60,59,60,59,60,59,60,59,60,59,60,60,59,60,59,60,59,60,59,60,59,59,60,59,60,59,59,60,59,60,59,60,118,61,118,61,118,61,0,0,0,0,0,0,0,0,61,61,61,62,63,64,61,62,63,64,61,62,63,64,61,62,63,64,62,63,64,61,61,62,63,64,61,62,63,64,62,63,64,61,62,63,64,61,62,63,64,62,63,64,61,62,63,64,61,61,61,62,63,64,61,62,63,64,61,62,63,64,61,62,63,64,61,62,63,64,119,65,0,0,0,0,65,66,65,66,65,66,65,66,65,66,65,66,65,66,66,65,66,65,66,65,66,65,66,65,65,66,65,65,66,65,66,65,66,65,66,120,0,0,67,67,67,67,67,67,67,67,67,67,67,67,120,0,0,67,67,67,67,67,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,121,0,0,0,0,0,71,71,0,0,0,0,71,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,72,73,74,71,72,73,74,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,72,73,74,71,72,73,74,72,73,74,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,0,0,0,75,78,75,78,0,0,0,75,76,77,78,79,80,75,76,77,78,79,80,75,76,77,78,79,80,75,76,77,78,79,80,76,77,79,80,75,76,77,78,79,80,75,78,75,76,77,78,79,80,75,78,76,77,79,80,75,76,77,78,79,80,75,76,77,78,79,80,76,77,79,80,75,76,77,78,79,80,75,76,77,78,79,80,75,78,75,76,77,78,79,80,75,76,77,78,79,80,75,76,77,78,79,80,75,76,77,78,79,80,82,82,0,0,0,82,83,84,82,83,84,82,83,84,82,83,84,82,83,84,82,82,83,84,82,83,84,82,83,84,82,83,84,82,83,84,82,83,84,82,83,84,82,83,84,82,82,83,84,82,83,84,82,83,84,82,83,84,0,0,0,0,0,0,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,94,94,95,94,95,94,95,94,95,95,94,95,94,95,94,95,94,95,94,95,95,94,95,94,95,94,94,95,94,95,94,95,94,95,96,0,0,96,97,96,97,96,97,96,97,97,96,96,97,96,96,97,96,96,97,96,97,96,97,97,96,97,97,96,97,96,97,96,97,96,97],"f":[0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2,2]]],[[3,[2,2]]]],[4,4],[5,5],[[]],[[]],[[]],[[4,4],6],[[5,5],6],0,[[],[[3,[1,1]]]],[[],4],[[],5],0,0,[[[3,[7,7]],3],8],[[4,4],8],[[5,5],8],[3],[3],[3],[[[3,[9,9]],10],11],[[4,10],11],[[5,10],11],[[]],[[]],[[]],[[[3,[12,12]]]],[4],[5],0,0,[[]],[[]],[[]],0,0,[[]],[[[3,[13,13]],3],[[14,[6]]]],[[4,4],[[14,[6]]]],[[5,5],[[14,[6]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[17,[2]]],[[17,[2]]]],[18,18],[[]],[[]],[[[17,[19]],17],6],[[18,18],6],[[],[[17,[1]]]],[[],18],0,[[[17,[7]],17],8],[[18,18],8],[17],[[[17,[9]],10],11],[[18,10],11],[[]],[[]],[[[17,[12]]]],[18],[[]],[[]],[17,20],[[[17,[13]],17],[[14,[6]]]],[[18,18],[[14,[6]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[21,21],[[]],[[21,21],6],[[],[[23,[22]]]],[[],[[23,[24]]]],[[],21],[[21,21],8],0,[23],[[[23,[9]],10],11],[[21,10],11],[[]],[[]],[21],[[]],[[]],[[[23,[22]],22],20],[[[23,[24]],24],20],[[21,21],[[14,[6]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,[[]],[[]],[25,25],[[]],[[],25],[[25,25],8],[[25,10],11],[[]],[[]],[[25,22],20],[[25,24],20],[[25,25],[[14,[6]]]],[[]],[[],15],[[],15],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[26,[2]]],[[26,[2]]]],[27,27],[[]],[[]],[[[26,[19]],26],6],[[27,27],6],[[],[[26,[1]]]],[[],27],[[[26,[7]],26],8],[[27,27],8],[26],[[[26,[9]],10],11],[[27,10],11],[[]],[[]],[[[26,[12]]]],[27],[[]],[[]],[[26,24],20],[[26,22],20],[[[26,[13]],26],[[14,[6]]]],[[27,27],[[14,[6]]]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[28,28],[29,29],[[]],[[]],[[29,29],6],[[],28],[[],29],0,[[28,28],8],[[29,29],8],[28],[[28,10],11],[[29,10],11],[[]],[[]],[29],[[]],[[]],[28,20],[[28,28],[[14,[6]]]],[[29,29],[[14,[6]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[30,[2]]],[[30,[2]]]],[31,31],[[]],[[]],[[31,31],6],[[],[[30,[24]]]],[[],[[30,[22]]]],[[],31],[[[30,[7]],30],8],[[31,31],8],[30],[[[30,[9]],10],11],[[31,10],11],[[]],[[]],[31],[[]],[[]],[[[30,[24]],24],20],[[[30,[22]],22],20],[[31,31],[[14,[6]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[2]]],[[32,[2]]]],[33,33],[[[34,[2]]],[[34,[2]]]],[35,35],[36,36],[[]],[[]],[[]],[[]],[[]],[[33,33],6],[[35,35],6],[[36,36],6],0,[[],[[32,[24]]]],[[],[[32,[22]]]],[[],33],[[],[[34,[22]]]],[[],[[34,[24]]]],[[],35],[[],36],[[[32,[7]],32],8],[[33,33],8],[[[34,[7]],34],8],[[35,35],8],[[36,36],8],[32],[34],[34],[[[32,[9]],10],11],[[33,10],11],[[[34,[9]],10],11],[[35,10],11],[[36,10],11],[[]],[[]],[[]],[[]],[[]],[33],[35],[36],[[]],[[]],[[]],[[]],[[]],[[[32,[22]],22],20],[[[32,[24]],24],20],[[[34,[24]],24],20],[[[34,[22]],22],20],[[33,33],[[14,[6]]]],[[35,35],[[14,[6]]]],[[36,36],[[14,[6]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[38,38],6],[[40,40],6],[[],37],[[],38],[[],39],[[],40],[[37,37],8],[[38,38],8],[[39,39],8],[[40,40],8],[37],[39],[[37,10],11],[[38,10],11],[[39,10],11],[[40,10],11],[[]],[[]],[[]],[[]],[38],[40],[[]],[[]],[[]],[[]],[[37,22],20],[[39,24],20],[[38,38],[[14,[6]]]],[[40,40],[[14,[6]]]],0,[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[41,41],[42,42],[[]],[[]],[[42,42],6],[[],41],[[],42],[[41,41],8],[[42,42],8],[41],[[41,10],11],[[42,10],11],[[]],[[]],[42],[[]],[[]],[41,20],[[41,41],[[14,[6]]]],[[42,42],[[14,[6]]]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[2]]],[[43,[2]]]],[44,44],[45,45],[[]],[[]],[[]],[[44,44],6],[[45,45],6],[[],[[43,[1]]]],[[],44],[[],45],[[[43,[7]],43],8],[[44,44],8],[[45,45],8],[43],[43],[[[43,[9]],10],11],[[44,10],11],[[45,10],11],[[]],[[]],[[]],[44],[45],[[]],[[]],[[]],0,[43,20],[[[43,[13]],43],[[14,[6]]]],[[44,44],[[14,[6]]]],[[45,45],[[14,[6]]]],0,[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[2]]],[[46,[2]]]],[47,47],[48,48],[[]],[[]],[[]],[[47,47],6],[[48,48],6],[[],[[46,[1]]]],[[],47],[[],48],[[[46,[7]],46],8],[[47,47],8],[[48,48],8],[46],[46],[[[46,[9]],10],11],[[47,10],11],[[48,10],11],[[]],[[]],[[]],[47],[48],[[]],[[]],[[]],0,[46,20],[[[46,[13]],46],[[14,[6]]]],[[47,47],[[14,[6]]]],[[48,48],[[14,[6]]]],0,[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[49,[2]]],[[49,[2]]]],[50,50],[51,51],[[]],[[]],[[]],[[50,50],6],[[51,51],6],[[],[[49,[1]]]],[[],50],[[],51],[[[49,[7]],49],8],[[50,50],8],[[51,51],8],[49],[49],[[[49,[9]],10],11],[[50,10],11],[[51,10],11],[[]],[[]],[[]],[50],[51],[[]],[[]],[[]],0,[49,20],[[[49,[13]],49],[[14,[6]]]],[[50,50],[[14,[6]]]],[[51,51],[[14,[6]]]],0,[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[2]]],[[52,[2]]]],[53,53],[[[54,[2]]],[[54,[2]]]],[55,55],[56,56],[[]],[[]],[[]],[[]],[[]],[[53,53],6],[[55,55],6],[[56,56],6],[[],[[52,[24]]]],[[],[[52,[22]]]],[[],53],[[],[[54,[22]]]],[[],[[54,[24]]]],[[],55],[[],56],0,0,0,[[[52,[7]],52],8],[[53,53],8],[[[54,[7]],54],8],[[55,55],8],[[56,56],8],[52],[54],[54],[[[52,[9]],10],11],[[53,10],11],[[[54,[9]],10],11],[[55,10],11],[[56,10],11],[[]],[[]],[[]],[[]],[[]],[53],[55],[56],[[]],[[]],[[]],[[]],[[]],[[[52,[22]],22],20],[[[52,[24]],24],20],[[[54,[22]],22],20],[[[54,[24]],24],20],[[53,53],[[14,[6]]]],[[55,55],[[14,[6]]]],[[56,56],[[14,[6]]]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[57,[2]]],[[57,[2]]]],[58,58],[[]],[[]],[[[57,[19]],57],6],[[58,58],6],[[],[[57,[1]]]],[[],58],[[[57,[7]],57],8],[[58,58],8],[57],[[[57,[9]],10],11],[[58,10],11],[[]],[[]],[[[57,[12]]]],[58],[[]],[[]],[57,20],[[[57,[13]],57],[[14,[6]]]],[[58,58],[[14,[6]]]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[59,[2]]],[[59,[2]]]],[60,60],[[]],[[]],[[[59,[19]],59],6],[[60,60],6],[[],[[59,[1]]]],[[],60],[[[59,[7]],59],8],[[60,60],8],[59],[[[59,[9]],10],11],[[60,10],11],[[]],[[]],[[[59,[12]]]],[60],[[]],[[]],[59,20],[[[59,[13]],59],[[14,[6]]]],[[60,60],[[14,[6]]]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[2]]],[[61,[2]]]],[62,62],[63,63],[64,64],[[]],[[]],[[]],[[]],[[62,62],6],[[63,63],6],[[64,64],6],[[],[[61,[22]]]],[[],[[61,[24]]]],[[],62],[[],63],[[],64],[[[61,[7]],61],8],[[62,62],8],[[63,63],8],[[64,64],8],[61],[61],[61],[[[61,[9]],10],11],[[62,10],11],[[63,10],11],[[64,10],11],[[]],[[]],[[]],[[]],[62],[63],[64],[[]],[[]],[[]],[[]],0,[[[61,[24]],24],20],[[[61,[22]],22],20],[[62,62],[[14,[6]]]],[[63,63],[[14,[6]]]],[[64,64],[[14,[6]]]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[65,[2]]],[[65,[2]]]],[66,66],[[]],[[]],[[[65,[19]],65],6],[[66,66],6],[[],[[65,[1]]]],[[],66],[[[65,[7]],65],8],[[66,66],8],[65],[[[65,[9]],10],11],[[66,10],11],[[]],[[]],[[[65,[12]]]],[66],[[]],[[]],[65,20],[[[65,[13]],65],[[14,[6]]]],[[66,66],[[14,[6]]]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,[[]],[[]],[67,67],[[]],[[],67],0,[[67,67],8],[[67,10],11],[[]],0,[[]],[[67,67],[[14,[6]]]],[[68,68,24,24,68]],0,0,0,[[]],[[],15],[[],15],[[],16],0,[[]],[[]],[69,69],[[]],[[],69],[[69,69],8],[[69,10],11],[[]],[[]],0,[[69,68,68,24,24,68]],[[]],[[],15],[[],15],[[],16],0,[[]],[[]],[70,70],[[]],[[],70],[[70,70],8],[[70,10],11],[[]],[[]],[[70,68,68,24,24,68]],[[]],[[],15],[[],15],[[],16],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,71],[72,72],[73,73],[74,74],[[]],[[]],[[]],[[]],[[72,72],6],[[73,73],6],[[74,74],6],[[],71],[[],72],[[],73],[[],74],0,[[71,71],8],[[72,72],8],[[73,73],8],[[74,74],8],[[71,24],20],[71],[71],[71],[[71,10],11],[[72,10],11],[[73,10],11],[[74,10],11],[[]],[[]],[[]],[[]],[72],[73],[74],[[]],[[]],[[]],[[]],[[72,72],[[14,[6]]]],[[73,73],[[14,[6]]]],[[74,74],[[14,[6]]]],0,[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[75,[2]]],[[75,[2]]]],[76,76],[77,77],[[[78,[2]]],[[78,[2]]]],[79,79],[80,80],[[]],[[]],[[]],[[]],[[]],[[]],[[76,76],6],[[77,77],6],[[79,79],6],[[80,80],6],[[],[[75,[1]]]],[[],76],[[],77],[[],[[78,[1]]]],[[],79],[[],80],0,0,[[[75,[7]],75],8],[[76,76],8],[[77,77],8],[[[78,[7]],78],8],[[79,79],8],[[80,80],8],[[75,24],81],[[78,24],81],[75],[75],[78],[78],[[[75,[9]],10],11],[[76,10],11],[[77,10],11],[[[78,[9]],10],11],[[79,10],11],[[80,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[76],[77],[79],[80],[[]],[[]],[[]],[[]],[[]],[[]],[[[75,[13]],75],[[14,[6]]]],[[76,76],[[14,[6]]]],[[77,77],[[14,[6]]]],[[[78,[13]],78],[[14,[6]]]],[[79,79],[[14,[6]]]],[[80,80],[[14,[6]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[82,82],6],[[83,83],6],[[84,84],6],0,[[],82],[[],83],[[],84],[[82,82],8],[[83,83],8],[[84,84],8],[[82,24],20],[82],[82],[[82,10],11],[[83,10],11],[[84,10],11],[[]],[[]],[[]],[82],[83],[84],[[]],[[]],[[]],[[82,82],[[14,[6]]]],[[83,83],[[14,[6]]]],[[84,84],[[14,[6]]]],0,[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[[]],[[]],[85,85],[[]],[[],85],[85],[85],[[85,85],8],[[85,10],11],[[85,10],11],[86,85],[[]],[[]],[[]],[[],87],[[],15],[[],15],[[],16],0,[[]],[[]],[20,20],[[]],[[],20],[20],[20],[[20,20],8],[[20,10],11],[[20,10],11],[[]],[68,20],[[]],[[20,20],[[14,[6]]]],[[]],[[],87],[[],15],[[],15],[[],16],0,[[]],[[]],[81,81],[[]],[[],81],[81],[81],[[81,81],8],[[81,10],11],[[81,10],11],[24,81],[[]],[[]],[[]],[[],87],[[],15],[[],15],[[],16],0,[[]],[[]],[88,88],[[]],[[],88],[88],[88],[[88,88],8],[[88,10],11],[[88,10],11],[[]],[24,88],[[]],[[]],[[],87],[[],15],[[],15],[[],16],0,[[]],[[]],[89,89],[[]],[[],89],[89],[89],[[89,89],8],[[89,10],11],[[89,10],11],[24,89],[[]],[[]],[[]],[[],87],[[],15],[[],15],[[],16],0,[[]],[[]],[90,90],[[]],[[],90],[90],[90],[[90,90],8],[[90,10],11],[[90,10],11],[22,90],[[]],[[]],[[]],[[],87],[[],15],[[],15],[[],16],0,0,0,0,[[]],[[]],[91,91],[[]],[[91,91],6],[[],91],[[91,91],8],[[91,22],20],[[91,24],20],[[91,10],11],[[]],[91],[[]],[[91,91],[[14,[6]]]],[[]],[[],15],[[],15],[[],16],0,[[]],[[]],[92,92],[[]],[[92,92],6],[[],92],[[92,92],8],[[92,22],20],[[92,24],81],[[92,24],20],[[92,10],11],[[]],[92],[[]],[[92,92],[[14,[6]]]],[[]],[[],15],[[],15],[[],16],0,[[]],[[]],[93,93],[[]],[[93,93],6],[[],93],[[93,93],8],[[93,24],20],[[93,22],20],[[93,10],11],[[]],[93],[[]],[[93,93],[[14,[6]]]],[[]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[94,94],[95,95],[[]],[[]],[[95,95],6],[[],94],[[],95],[[94,94],8],[[95,95],8],[[94,24],20],[94],[[94,10],11],[[95,10],11],[[]],[[]],[95],[[]],[[]],[[94,94],[[14,[6]]]],[[95,95],[[14,[6]]]],0,[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,[[]],[[]],[[]],[[]],[[[96,[2]]],[[96,[2]]]],[97,97],[[]],[[]],[[97,97],6],[[],[[96,[22]]]],[[],[[96,[24]]]],[[],97],0,[[[96,[7]],96],8],[[97,97],8],[[[96,[24]],24],20],[[[96,[22]],22],20],[96],[[[96,[9]],10],11],[[97,10],11],[[]],[[]],[97],[[]],[[]],[[97,97],[[14,[6]]]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16]],"p":[[8,"Default"],[8,"Clone"],[3,"Operator"],[3,"Operator_Target"],[3,"Operator_Op"],[4,"Ordering"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"PartialOrd"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"DisplaceOp"],[3,"DisplaceOp_Displace"],[8,"Ord"],[3,"Distance"],[3,"ElongateOp_Extent"],[3,"Vec2"],[3,"ElongateOp"],[3,"Vec3"],[3,"HollowOp"],[3,"IntersectionOp"],[3,"IntersectionOp_Sdf"],[3,"IsosurfaceOp"],[3,"IsosurfaceOp_Delta"],[3,"ReflectOp"],[3,"ReflectOp_Axis"],[3,"RepeatInfiniteOp"],[3,"RepeatInfiniteOp_Period"],[3,"RepeatCountOp"],[3,"RepeatCountOp_Period"],[3,"RepeatCountOp_Count"],[3,"Rotate2dOp"],[3,"Rotate2dOp_Angle"],[3,"Rotate3dOp"],[3,"Rotate3dOp_Rotation"],[3,"ScaleOp"],[3,"ScaleOp_Scale"],[3,"SmoothIntersectionOp"],[3,"SmoothIntersectionOp_Sdf"],[3,"SmoothIntersectionOp_K"],[3,"SmoothSubtractionOp"],[3,"SmoothSubtractionOp_Sdf"],[3,"SmoothSubtractionOp_K"],[3,"SmoothUnionOp"],[3,"SmoothUnionOp_Sdf"],[3,"SmoothUnionOp_K"],[3,"StretchInfiniteOp"],[3,"StretchInfiniteOp_Dir"],[3,"StretchDistOp"],[3,"StretchDistOp_Dir"],[3,"StretchDistOp_Dist"],[3,"SubtractionOp"],[3,"SubtractionOp_Sdf"],[3,"TranslateOp"],[3,"TranslateOp_Translation"],[3,"TwistOp"],[3,"TwistOp_AxisPos"],[3,"TwistOp_AxisRot"],[3,"TwistOp_K"],[3,"UnionOp"],[3,"UnionOp_Sdf"],[3,"RaymarchOutput"],[15,"f32"],[3,"SphereTraceLipschitz"],[3,"SphereTraceNaive"],[3,"Extrude"],[3,"Extrude_Sdf"],[3,"Extrude_Axis"],[3,"Extrude_Depth"],[3,"TetrahedronNormals"],[3,"TetrahedronNormals_Sdf"],[3,"TetrahedronNormals_Epsilon"],[3,"CentralDiffNormals"],[3,"CentralDiffNormals_Sdf"],[3,"CentralDiffNormals_Epsilon"],[3,"Normal"],[3,"Sweep"],[3,"Sweep_Core"],[3,"Sweep_Shell"],[3,"Color"],[3,"Vec4"],[3,"String"],[3,"Position"],[3,"Tangent"],[3,"Uv"],[3,"ChebyshevMetric"],[3,"EuclideanMetric"],[3,"TaxicabMetric"],[3,"Octahedron"],[3,"Octahedron_Size"],[3,"Plane"],[3,"Plane_Dir"],[8,"SignedDistanceOperator"],[6,"Onion"],[6,"Transform"],[6,"Displace"],[6,"Elongate"],[6,"Intersection"],[6,"Isosurface"],[6,"Reflect"],[6,"RepeatCount"],[6,"RepeatInfinite"],[6,"Rotate2d"],[6,"Rotate3d"],[6,"Scale"],[6,"SmoothIntersection"],[6,"SmoothSubtraction"],[6,"SmoothUnion"],[6,"StretchInfinite"],[6,"StretchDist"],[6,"Subtraction"],[6,"Translate"],[6,"Twist"],[6,"Union"],[8,"Raymarch"],[8,"SignedDistanceField"],[6,"Ball"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
